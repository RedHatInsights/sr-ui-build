{"version":3,"file":"4233.833afe4e.js","mappings":"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","sources":["webpack://@apicurio/registry-ui/./src/app/components/common/ifAuth.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifFeature.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifNotEmpty.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/header.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/components/schemaMapping/schemaMapping.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/rules/rules.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifact/artifact.tsx","webpack://@apicurio/registry-ui/./src/app/pages/root/root.tsx","webpack://@apicurio/registry-ui/./src/app/pages/404/404.tsx","webpack://@apicurio/registry-ui/./src/app/pages/settings/components/propertyInput.tsx","webpack://@apicurio/registry-ui/./src/app/pages/settings/components/configProperty.tsx","webpack://@apicurio/registry-ui/./src/app/pages/settings/settings.tsx","webpack://@apicurio/registry-ui/./src/app/app.tsx","webpack://@apicurio/registry-ui/./src/bootstrap.tsx","webpack://@apicurio/registry-ui/./src/models/artifactMetaData.model.ts","webpack://@apicurio/registry-ui/./src/models/artifactTypes.model.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\nimport {AuthService} from \"../../../services/auth\";\n\n/**\n * Properties\n */\nexport interface IfAuthProps extends PureComponentProps {\n    enabled?: boolean;\n    isAuthenticated?: boolean;\n    isAdmin?: boolean;\n    isDeveloper?: boolean;\n    owner?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfAuthState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated authentication parameters are true.\n */\nexport class IfAuth extends PureComponent<IfAuthProps, IfAuthState> {\n\n    constructor(props: Readonly<IfAuthProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfAuthState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const auth: AuthService = Services.getAuthService();\n        let rval: boolean = true;\n        if (this.props.enabled !== undefined) {\n            rval = rval && (auth.isAuthenticationEnabled() === this.props.enabled);\n        }\n        if (this.props.isAuthenticated !== undefined) {\n            rval = rval && (auth.isAuthenticated() === this.props.isAuthenticated);\n        }\n        if (this.props.isAdmin !== undefined) {\n            rval = rval && (auth.isUserAdmin() === this.props.isAdmin);\n        }\n        if (this.props.isDeveloper !== undefined) {\n            rval = rval && (auth.isUserDeveloper(this.props.owner) === this.props.isDeveloper);\n        }\n        return rval;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\n\n/**\n * Properties\n */\nexport interface IfFeatureProps extends PureComponentProps {\n    feature: string;\n    is?: any;\n    isNot?: any;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfFeatureState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated feature matches the given criteria.  Use this if you want to show/hide\n * UI elements based on the configured application feature set.\n */\nexport class IfFeature extends PureComponent<IfFeatureProps, IfFeatureState> {\n\n    constructor(props: Readonly<IfFeatureProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfFeatureState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const features: any = Services.getConfigService().features();\n        const featureValue: any = features[this.props.feature];\n        if (this.props.is !== undefined) {\n            return featureValue === this.props.is;\n        } else if (this.props.isNot !== undefined) {\n            return featureValue !== this.props.isNot;\n        } else {\n            return featureValue !== undefined;\n        }\n    }\n\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Button, EmptyState, EmptyStateBody, EmptyStateVariant, Title} from \"@patternfly/react-core\";\n\n/**\n * Properties\n */\nexport interface IfNotEmptyProps {\n    collection?: any[] | undefined;\n    emptyState?: React.ReactNode;\n    emptyStateTitle?: string;\n    emptyStateMessage?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * provided collection is not empty.  If the provided collection is empty, then\n * an empty state control is displayed instead.\n */\nexport const IfNotEmpty: FunctionComponent<IfNotEmptyProps> = ({collection, emptyState, emptyStateTitle, emptyStateMessage, children}: IfNotEmptyProps) => {\n    const isEmpty = () => {\n        return !collection || collection.length === 0;\n    };\n\n    const empty: React.ReactNode = emptyState || (\n        <EmptyState variant={EmptyStateVariant.xs}>\n            <Title headingLevel=\"h4\" size=\"md\">{emptyStateTitle || \"None found\"}</Title>\n            <EmptyStateBody>{emptyStateMessage || \"No items found.\"}</EmptyStateBody>\n        </EmptyState>\n    );\n\n    return isEmpty() ?\n        <React.Fragment children={empty}/> :\n        <React.Fragment children={children} />\n};\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./header.css\"\nimport {Brand, PageHeader, PageHeaderTools, PageHeaderToolsGroup, PageHeaderToolsItem} from '@patternfly/react-core';\nimport brandImg from \"./apicurio_logo_darkbkg_350px.png\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth} from \"../common/ifAuth\";\nimport {AvatarDropdown} from \"./avatarDropdown\";\n\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderProps extends PureComponentProps {\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderState extends PureComponentState {\n}\n\n\nexport class AppHeader extends PureComponent<AppHeaderProps, AppHeaderState> {\n\n    constructor(props: Readonly<AppHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let pageToolbar: React.ReactElement;\n        pageToolbar = (\n            <PageHeaderTools className=\"header-toolbar\">\n                <PageHeaderToolsGroup>\n                    <PageHeaderToolsItem id=\"avatar\">\n                        <IfAuth enabled={true}>\n                            <AvatarDropdown />\n                        </IfAuth>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n        );\n\n        return (<PageHeader\n            logo={<Brand onClick={this.navigateTo(this.linkTo(\"/artifacts\"))} src={brandImg} alt=\"Apicurio Registry\"/>}\n            showNavToggle={false}\n            headerTools={pageToolbar}\n        />);\n    }\n\n    protected initializeState(): AppHeaderState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {Tab, Tabs, TabTitleText} from '@patternfly/react-core';\nimport \"./pageheader.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth, IfFeature} from \"../common\";\nimport {Services} from \"../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderProps extends PureComponentProps {\n    tabKey: number;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifacts page.\n */\nexport class RootPageHeader extends PureComponent<RootPageHeaderProps, RootPageHeaderState> {\n\n    constructor(props: Readonly<RootPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let tabs: any[] = [\n            <Tab eventKey={0} title={<TabTitleText>Artifacts</TabTitleText>} />,\n            <Tab eventKey={1} title={<TabTitleText>Global rules</TabTitleText>} />\n        ];\n        if (Services.getConfigService().featureRoleManagement()) {\n            tabs.push(\n                <Tab eventKey={2} title={<TabTitleText>Access</TabTitleText>} />\n            );\n        }\n        if (Services.getConfigService().featureSettings()) {\n            tabs.push(\n                <Tab eventKey={3} title={<TabTitleText>Settings</TabTitleText>} />\n            );\n        }\n        return (\n            <div>\n                <IfAuth isAdmin={true}>\n                    <Tabs activeKey={this.props.tabKey} onSelect={this.handleTabClick} children={tabs} />\n                </IfAuth>\n            </div>\n        );\n    }\n\n    protected initializeState(): RootPageHeaderState {\n        return {};\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string): void => {\n        if (eventKey != this.props.tabKey) {\n            if (eventKey == 0) {\n                // navigate to artifacts\n                this.navigateTo(this.linkTo(\"/artifacts\"))();\n            }\n            if (eventKey == 1) {\n                // navigate to global rules\n                this.navigateTo(this.linkTo(\"/rules\"))();\n            }\n            if (eventKey == 2) {\n                // navigate to permissions page\n                this.navigateTo(this.linkTo(\"/roles\"))();\n            }\n            if (eventKey == 3) {\n                // navigate to settings page\n                this.navigateTo(this.linkTo(\"/settings\"))();\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {SchemaMapping, SchemaMappingProps} from \"./schemaMapping\";\nimport {FederatedComponentProps, FederatedUtils} from \"../../federated\";\n\nexport interface FederatedSchemaMappingProps extends SchemaMappingProps, FederatedComponentProps {\n}\n\nexport default class FederatedSchemaMapping extends SchemaMapping {\n\n    constructor(props: Readonly<FederatedSchemaMappingProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedSchemaMappingProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./rules.css\";\nimport {Button, PageSection, PageSectionVariants, TextContent} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {RuleList} from \"../../components/ruleList\";\nimport {Rule} from \"../../../models\";\nimport {Services} from \"../../../services\";\nimport {RootPageHeader} from \"../../components\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageState extends PageState {\n    rules: Rule[] | null;\n}\n\n/**\n * The global rules page.\n */\nexport class RulesPage extends PageComponent<RulesPageProps, RulesPageState> {\n\n    constructor(props: Readonly<RulesPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_rules-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={1} />\n                </PageSection>\n                <PageSection className=\"ps_rules-description\" variant={PageSectionVariants.light}>\n                    <TextContent>\n                        Manage the list of global rules for this registry. Rules can be enabled, disabled, and individually configured.\n                    </TextContent>\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                    <React.Fragment>\n                        <RuleList rules={this.rules()}\n                                  onEnableRule={this.doEnableRule}\n                                  onDisableRule={this.doDisableRule}\n                                  onConfigureRule={this.doConfigureRule} />\n                    </React.Fragment>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): RulesPageState {\n        return {\n            rules: null\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().getRules().then( rules => {\n                this.setMultiState({\n                    isLoading: false,\n                    rules\n                });\n            });\n    }\n\n    private rules(): Rule[] {\n        if (this.state.rules) {\n            return this.state.rules;\n        } else {\n            return [];\n        }\n    }\n\n    private doEnableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Enabling global rule:\", ruleType);\n        let config: string = \"FULL\";\n        if (ruleType === \"COMPATIBILITY\") {\n            config = \"BACKWARD\";\n        }\n        Services.getAdminService().createRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error enabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", [...this.rules(), {config, type: ruleType}]);\n    };\n\n    private doDisableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Disabling global rule:\", ruleType);\n        Services.getAdminService().deleteRule(ruleType).catch(error => {\n            this.handleServerError(error, `Error disabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().filter(r => r.type !== ruleType));\n    };\n\n    private doConfigureRule = (ruleType: string, config: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Configuring global rule:\", ruleType, config);\n        Services.getAdminService().updateRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error configuring \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().map(r => {\n            if (r.type === ruleType) {\n                return {config, type: r.type};\n            } else {\n                return r;\n            }\n        }));\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {Services} from \"../../../services\";\nimport {Redirect} from \"react-router-dom\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactRedirectPageProps extends PageProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactRedirectPageState extends PageState {\n}\n\n/**\n * The artifact details redirect page.\n */\nexport class ArtifactRedirectPage extends PageComponent<ArtifactRedirectPageProps, ArtifactRedirectPageState> {\n\n    constructor(props: Readonly<ArtifactRedirectPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        const groupId: any = this.groupIdParam();\n        const artifactId: any = this.artifactIdParam();\n        const redirect: string = this.linkTo(`/artifacts/${ encodeURIComponent(groupId) }/${ encodeURIComponent(artifactId) }/versions/latest`);\n        Services.getLoggerService().info(\"[ArtifactRedirectPage] Redirecting to: %s\", redirect);\n        return (\n            <Redirect to={redirect}  />\n        );\n    }\n\n    protected groupIdParam(): string {\n        return this.getPathParam(\"groupId\");\n    }\n\n    protected artifactIdParam(): string {\n        return this.getPathParam(\"artifactId\");\n    }\n\n    protected initializePageState(): ArtifactRedirectPageState {\n        return {};\n    }\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {Redirect} from \"react-router\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootRedirectPageProps extends PageProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootRedirectPageState extends PageState {\n}\n\n/**\n * The artifact details redirect page.\n */\nexport class RootRedirectPage extends PageComponent<RootRedirectPageProps, RootRedirectPageState> {\n\n    constructor(props: Readonly<RootRedirectPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        const redirect: string = `/artifacts`;\n        return (\n            <Redirect to={redirect}  />\n        );\n    }\n\n    protected initializePageState(): RootRedirectPageState {\n        return {};\n    }\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from \"@patternfly/react-core\";\nimport {ExclamationCircleIcon} from \"@patternfly/react-icons\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NotFoundPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NotFoundPageState extends PageState {\n}\n\n/**\n * The global rules page.\n */\nexport class NotFoundPage extends PageComponent<NotFoundPageProps, NotFoundPageState> {\n\n    constructor(props: Readonly<NotFoundPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_rules-header\" variant={PageSectionVariants.light}>\n                    <EmptyState variant={EmptyStateVariant.full}>\n                        <EmptyStateIcon icon={ExclamationCircleIcon} />\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                            404 Error: page not found\n                        </Title>\n                        <EmptyStateBody>\n                            This page couldn't be found.  If you think this is a bug, please report the issue.\n                        </EmptyStateBody>\n                        <Button variant=\"primary\"\n                                data-testid=\"error-btn-artifacts\"\n                                onClick={this.navigateTo(this.linkTo(\"/artifacts\"))}>Show all artifacts</Button>\n                    </EmptyState>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): NotFoundPageState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport \"./configProperty.css\";\nimport {Button, InputGroup, TextInput} from '@patternfly/react-core';\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../components\";\nimport {CheckIcon, TimesIcon} from \"@patternfly/react-icons\";\n\n/**\n * Properties\n */\nexport interface PropertyInputProps extends PureComponentProps {\n    name: string;\n    value: string;\n    type:\n        | 'text'\n        | 'number'\n        ;\n    onChange: (newValue: string) => void;\n    onValid: (valid: boolean) => void;\n    onCancel: () => void;\n    onSave: () => void;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PropertyInputState extends PureComponentState {\n    currentValue: string;\n    isValid: boolean;\n    isDirty: boolean;\n}\n\n/**\n * Models a single editable config property.\n */\nexport class PropertyInput extends PureComponent<PropertyInputProps, PropertyInputState> {\n\n    constructor(props: Readonly<PropertyInputProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return <InputGroup>\n            <TextInput name={ this.props.name }\n                       value={ this.state.currentValue }\n                       validated={ this.validated() }\n                       onChange={ this.handleInputChange }\n                       onKeyDown={ this.handleKeyPress }\n                       aria-label=\"configuration property input\"/>\n        </InputGroup>\n    }\n\n    protected initializeState(): PropertyInputState {\n        return {\n            currentValue: this.props.value,\n            isDirty: false,\n            isValid: true\n        };\n    }\n\n    private validated(): 'success' | 'warning' | 'error' | 'default' {\n        return this.state.isValid ? \"default\" : \"error\";\n    }\n\n    private handleInputChange = (value: string): void => {\n        const oldValid: boolean = this.state.isValid;\n        const isValid: boolean = this.validate(value);\n        this.setMultiState({\n            currentValue: value,\n            isDirty: value !== this.props.value,\n            isValid\n        }, () => {\n            if (oldValid !== isValid) {\n                this.props.onValid(isValid);\n            }\n            this.props.onChange(value);\n        });\n    };\n\n    private validate(value: string): boolean {\n        if (this.props.type === \"text\") {\n            return value.trim().length > 0;\n        } else if (this.props.type === \"number\") {\n            if (value.trim().length === 0) {\n                return false;\n            }\n            const num: number = Number(value);\n            return Number.isInteger(num);\n        }\n        return true;\n    }\n\n    private handleKeyPress = (event: any): void => {\n        if (event.code === \"Escape\") {\n            this.props.onCancel();\n        }\n        if (event.code === \"Enter\" && this.state.isDirty && this.state.isValid) {\n            this.props.onSave();\n        }\n    };\n\n}\n","/**\n * @license\n * Copyright 2022 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, {FunctionComponent, useState} from \"react\";\nimport \"./configProperty.css\";\nimport {Button, Flex, FlexItem, Switch} from '@patternfly/react-core';\nimport {ConfigurationProperty} from \"../../../../models/configurationProperty.model\";\nimport {PropertyInput} from \"./propertyInput\";\nimport {If} from \"../../../components/common/if\";\nimport {CheckIcon, CloseIcon, PencilAltIcon} from \"@patternfly/react-icons\";\n\n/**\n * Properties\n */\nexport interface ConfigPropertyProps {\n    property: ConfigurationProperty;\n    onChange: (property: ConfigurationProperty, newValue: string) => void;\n    onReset: (property: ConfigurationProperty) => void;\n}\n\n\nexport const ConfigProperty: FunctionComponent<ConfigPropertyProps> = ({property, onChange, onReset}: ConfigPropertyProps) => {\n    const [ isEditing, setEditing ] = useState(false);\n    const [ newPropertyValue, setNewPropertyValue ] = useState(property.value);\n    const [ isValid, setValid ] = useState(true);\n\n    const onCheckboxChange = (checked: boolean): void => {\n        const newValue: string = checked ? \"true\" : \"false\";\n        onChange(property, newValue);\n    };\n\n    const onPropertyValueChange = (newValue: string): void => {\n        setNewPropertyValue(newValue);\n    };\n\n    const onPropertyValueValid = (valid: boolean): void => {\n        setValid(valid);\n    };\n\n    const onCancelEdit = (): void => {\n        setNewPropertyValue(property.value);\n        setEditing(false);\n    };\n\n    const onStartEditing = (): void => {\n        setValid(true);\n        setEditing(true);\n    };\n\n    const onSavePropertyValue = (): void => {\n        onChange(property, newPropertyValue);\n        setEditing(false);\n    };\n\n    const renderBooleanProp = (): React.ReactElement => {\n        return (\n            <Flex className=\"configuration-property boolean-property\">\n                <FlexItem>\n                    <div className=\"property-name\">\n                        <span className=\"name\">{property.label}</span>\n                        <span className=\"sep\">:</span>\n                        <span className=\"value\">{property.value === \"true\" ? \"On\" : \"Off\"}</span>\n                    </div>\n                    <div className=\"property-description\">{property.description}</div>\n                </FlexItem>\n                <FlexItem className=\"actions\" align={{default: \"alignRight\"}}>\n                    <Switch id={property.name} aria-label={property.label}\n                            className=\"action\"\n                            isChecked={property.value === \"true\"}\n                            onChange={onCheckboxChange} />\n                </FlexItem>\n            </Flex>\n        );\n    };\n\n    const renderStringProp = (type: 'text' | 'number'): React.ReactElement => {\n        return (\n            <Flex className=\"configuration-property string-property\">\n                <FlexItem>\n                    <div className=\"property-name\">\n                        <span className=\"name\">{property.label}</span>\n                    </div>\n                    <div className=\"property-description\">{property.description}</div>\n                    <If condition={!isEditing}>\n                        <div className=\"property-value\">{property.value}</div>\n                    </If>\n                    <If condition={isEditing}>\n                        <div className=\"property-editor\">\n                            <PropertyInput name={ property.name }\n                                           value={ property.value }\n                                           type={ type }\n                                           onChange={ onPropertyValueChange }\n                                           onValid={ onPropertyValueValid }\n                                           onCancel={ onCancelEdit }\n                                           onSave={ onSavePropertyValue }\n                            />\n                        </div>\n                    </If>\n                </FlexItem>\n                <FlexItem className=\"actions\" align={{default: \"alignRight\"}}>\n                    <If condition={!isEditing}>\n                        <Button variant=\"plain\" className=\"action single\" onClick={onStartEditing}><PencilAltIcon /></Button>\n                    </If>\n                    <If condition={isEditing}>\n                        <Button variant=\"plain\" className=\"action\" onClick={onSavePropertyValue} isDisabled={!isValid}><CheckIcon /></Button>\n                        <Button variant=\"plain\" className=\"action\" onClick={onCancelEdit}><CloseIcon /></Button>\n                    </If>\n                </FlexItem>\n            </Flex>\n        );\n    }\n\n    if (property.type === \"java.lang.Boolean\") {\n        return renderBooleanProp();\n    } else if (property.type === \"java.lang.Integer\") {\n        return renderStringProp(\"number\");\n    } else if (property.type === \"java.lang.Long\") {\n        return renderStringProp(\"number\");\n    } else {\n        return renderStringProp(\"text\");\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./settings.css\";\nimport {\n    Card,\n    CardBody, CardFooter,\n    CardTitle,\n    PageSection,\n    PageSectionVariants,\n    SearchInput,\n    TextContent\n} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {Services} from \"../../../services\";\nimport {IfNotEmpty, RootPageHeader} from \"../../components\";\nimport {ConfigurationProperty} from \"../../../models/configurationProperty.model\";\nimport {ConfigProperty} from \"./components\";\nimport {If} from \"../../components/common/if\";\n\n\ninterface PropertyGroup {\n    id: string,\n    label: string,\n    propertyNames: string[];\n    properties?: ConfigurationProperty[];\n}\n\nconst PROPERTY_GROUPS: PropertyGroup[] = [\n    {\n        id: \"authn\",\n        label: \"Authentication settings\",\n        propertyNames: [\n            \"registry.auth.basic-auth-client-credentials.enabled\",\n        ]\n    },\n    {\n        id: \"authz\",\n        label: \"Authorization settings\",\n        propertyNames: [\n            \"registry.auth.owner-only-authorization\",\n            \"registry.auth.owner-only-authorization.limit-group-access\",\n            \"registry.auth.anonymous-read-access.enabled\",\n            \"registry.auth.authenticated-read-access.enabled\",\n        ]\n    },\n    {\n        id: \"compatibility\",\n        label: \"Compatibility settings\",\n        propertyNames: [\n            \"registry.ccompat.legacy-id-mode.enabled\",\n        ]\n    },\n    {\n        id: \"console\",\n        label: \"Web console settings\",\n        propertyNames: [\n            \"registry.download.href.ttl\",\n            \"registry.ui.features.readOnly\"\n        ]\n    },\n];\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface SettingsPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface SettingsPageState extends PageState {\n    properties?: ConfigurationProperty[];\n    searchedProperties?: ConfigurationProperty[];\n    searchCriteria: string;\n}\n\n/**\n * The settings page.\n */\nexport class SettingsPage extends PageComponent<SettingsPageProps, SettingsPageState> {\n\n    constructor(props: Readonly<SettingsPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_settings-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={3} />\n                </PageSection>\n                <PageSection className=\"ps_settings-description\" variant={PageSectionVariants.light}>\n                    <TextContent>\n                        Configure global settings for this Service Registry instance.\n                    </TextContent>\n                    <TextContent style={{marginTop: \"10px\", marginBottom: \"5px\", maxWidth: \"450px\"}}>\n                        <SearchInput placeholder={`Search settings`}\n                                     aria-label=\"Search settings\"\n                                     value={this.state.searchCriteria}\n                                     onChange={this.onSearchCriteria}\n                                     onSearch={this.onSearchSettings}\n                                     onClear={this.onSearchClear}\n                        />\n                    </TextContent>\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                    <IfNotEmpty collection={this.state.searchedProperties} emptyStateMessage={`No settings found matching your search criteria.`}>\n                        {\n                            this.propertyGroups().map(group =>\n                                <If key={group.id} condition={group.properties !== undefined && group.properties.length > 0}>\n                                    <Card key={group.id} className=\"config-property-group\" style={{marginBottom: \"15px\"}}>\n                                        <CardTitle className=\"title\">{group.label}</CardTitle>\n                                        <CardBody className=\"config-properties\">\n                                            {\n                                                group.properties?.map(prop =>\n                                                    <ConfigProperty key={prop.name}\n                                                                    property={prop}\n                                                                    onChange={this.onPropertyChange}\n                                                                    onReset={this.onPropertyReset}\n                                                    />\n                                                )\n                                            }\n                                        </CardBody>\n                                    </Card>\n                                </If>\n                            )\n                        }\n                    </IfNotEmpty>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): SettingsPageState {\n        return {\n            searchCriteria: \"\"\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().listConfigurationProperties().then( properties => {\n                this.setMultiState({\n                    isLoading: false,\n                    properties\n                });\n                this.filterProperties();\n            });\n    }\n\n    private groupFor(groups: PropertyGroup[], prop: ConfigurationProperty): PropertyGroup {\n        for (const group of groups) {\n            if (group.propertyNames.indexOf(prop.name) >= 0) {\n                return group;\n            }\n        }\n        // Default to the last group (additional properties).\n        return groups[groups.length - 1];\n    }\n\n    private propertyGroups(): PropertyGroup[] {\n        const groups: PropertyGroup[] = [...PROPERTY_GROUPS];\n        groups.forEach(group => group.properties = []);\n        const additionalGroup: PropertyGroup = {\n            id: \"additional\",\n            label: \"Additional properties\",\n            properties: [],\n            propertyNames: []\n        };\n        groups.push(additionalGroup);\n        this.state.searchedProperties?.forEach(prop => {\n            this.groupFor(groups, prop).properties?.push(prop);\n        });\n        groups.forEach(group => {\n            group.properties = group.properties?.sort(\n                (prop1, prop2) => prop1.label.localeCompare(prop2.label));\n        });\n        return groups;\n    }\n\n    private acceptProperty = (property: ConfigurationProperty): boolean => {\n        if (!this.state.searchCriteria || this.state.searchCriteria.trim().length === 0) {\n            return true;\n        }\n        const sc: string = this.state.searchCriteria.toLocaleLowerCase();\n        return property.label.toLocaleLowerCase().indexOf(sc) >= 0 ||\n            property.description.toLocaleLowerCase().indexOf(sc) >= 0;\n    };\n\n    private filterProperties(): void {\n        const filteredProperties: ConfigurationProperty[] | undefined = this.state.properties?.filter(this.acceptProperty);\n        this.setSingleState(\"searchedProperties\", filteredProperties);\n    }\n\n    private onSearchCriteria = (criteria: string): void => {\n        this.setSingleState(\"searchCriteria\", criteria);\n    };\n\n    private onSearchSettings = (): void => {\n        this.filterProperties();\n    };\n\n    private onSearchClear = (): void => {\n        this.setMultiState({\n            searchCriteria: \"\"\n        }, this.onSearchSettings);\n    }\n\n    private onPropertyChange = (property: ConfigurationProperty, newValue: string): void => {\n        property.value = newValue;\n        Services.getAdminService().setConfigurationProperty(property.name, newValue).then(() => {\n            // The property was updated successfully.  Update the UI to display all config\n            // properties (the list may have changed by changing one of the values).\n            this.createLoaders();\n            Services.getAlertsService().settingChanged(property, newValue);\n        }).catch(error => {\n            // Failed to set the property... report the error somehow.\n            this.handleServerError(error, \"Error setting configuration property\");\n        });\n    };\n\n    private onPropertyReset = (property: ConfigurationProperty): void => {\n        Services.getAdminService().resetConfigurationProperty(property.name).then(() => {\n            // The property was updated successfully.  Update the UI to display all config\n            // properties (the list may have changed by changing one of the values).\n            this.createLoaders();\n        }).catch(error => {\n            // Failed to set the property... report the error somehow.\n            this.handleServerError(error, \"Error resetting configuration property\");\n        });\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport \"./app.css\";\n\nimport React from \"react\";\nimport { Page } from \"@patternfly/react-core\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { AppHeader } from \"./components/header\";\nimport { RulesPage } from \"./pages/rules\";\nimport { ArtifactsPage } from \"./pages/artifacts\";\nimport { ArtifactRedirectPage } from \"./pages/artifact\";\nimport { ArtifactVersionPage } from \"./pages/artifactVersion\";\nimport { RootRedirectPage } from \"./pages/root\";\nimport { NotFoundPage } from \"./pages/404\";\nimport { Services } from \"../services\";\nimport { RolesPage, SettingsPage } from \"./pages\";\n\n/**\n * The main application class.\n */\nexport default class App extends React.PureComponent<{}, {}> {\n  constructor(props: Readonly<any>) {\n    super(props);\n  }\n\n  public render() {\n    const contextPath:\n      | string\n      | undefined = Services.getConfigService().uiContextPath();\n    Services.getLoggerService().info(\n      \"[App] Using app contextPath: \",\n      contextPath\n    );\n\n    // Function to force the Artifact Version Page to fully remount each time we navigate to it.  This\n    // is needed because we want the page to fully rerender whenever the browser location changes, which\n    // happens when switching between versions of the artifact content (e.g. switch from version 1 to version 3).\n    const artifactVersionPage = (props: any): React.ReactElement => {\n      const location: string = props.location.pathname;\n      return <ArtifactVersionPage key={location} {...props} />;\n    };\n\n    return (\n      <Router basename={contextPath}>\n        <Page\n          className=\"pf-m-redhat-font\"\n          isManagedSidebar={false}\n          header={<AppHeader />}\n        >\n          <Switch>\n            <Route path=\"/\" exact={true} component={RootRedirectPage} />\n            <Route path=\"/rules\" exact={true} component={RulesPage} />\n            <Route path=\"/roles\" exact={true} component={RolesPage} />\n            <Route path=\"/settings\" exact={true} component={SettingsPage} />\n            <Route path=\"/artifacts\" exact={true} component={ArtifactsPage} />\n            <Route\n              path=\"/artifacts/:groupId/:artifactId\"\n              exact={true}\n              component={ArtifactRedirectPage}\n            />\n            <Route\n              path=\"/artifacts/:groupId/:artifactId/versions/:version\"\n              exact={true}\n              component={artifactVersionPage}\n            />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Page>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/app\";\nimport { Services } from \"./services\";\n\nconst renderApp = () =>\n  ReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\nServices.getAuthService().authenticateAndRender(renderApp);\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class ArtifactMetaData {\n\n    public groupId: string|null;\n    public id: string;\n    public name: string|null;\n    public description: string|null;\n    public labels: string[]|null;\n    public properties: { [key: string]: string };\n    public type: string;\n    public version: string;\n    public createdBy: string;\n    public createdOn: Date;\n    public modifiedBy: string;\n    public modifiedOn: Date;\n    public globalId: number;\n    public contentId: number|null;\n    public state: string;\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:interface-name\nexport class ArtifactTypes {\n\n    public static AVRO: string = \"AVRO\";\n    public static PROTOBUF: string = \"PROTOBUF\";\n    public static JSON: string = \"JSON\";\n    public static OPENAPI: string = \"OPENAPI\";\n    public static ASYNCAPI: string = \"ASYNCAPI\";\n    public static GRAPHQL: string = \"GRAPHQL\";\n    public static KCONNECT: string = \"KCONNECT\";\n    public static WSDL: string = \"WSDL\";\n    public static XSD: string = \"XSD\";\n    public static XML: string = \"XML\";\n\n}\n"],"names":["props","render","this","accept","children","initializeState","auth","rval","undefined","enabled","isAuthenticationEnabled","isAuthenticated","isAdmin","isUserAdmin","isDeveloper","isUserDeveloper","owner","featureValue","features","feature","is","isNot","IfNotEmpty","collection","emptyState","emptyStateTitle","emptyStateMessage","empty","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","length","pageToolbar","PageHeaderTools","className","PageHeaderToolsGroup","PageHeaderToolsItem","id","PageHeader","logo","Brand","onClick","navigateTo","linkTo","src","alt","showNavToggle","headerTools","handleTabClick","event","eventKey","tabKey","tabs","Tab","title","TabTitleText","featureRoleManagement","push","featureSettings","Tabs","activeKey","onSelect","postConstruct","doEnableRule","ruleType","debug","config","createRule","catch","error","handleServerError","setSingleState","rules","type","doDisableRule","deleteRule","filter","r","doConfigureRule","updateRule","map","renderPage","PageSection","PageSectionVariants","padding","default","TextContent","isFilled","onEnableRule","onDisableRule","onConfigureRule","initializePageState","createLoaders","getRules","then","setMultiState","isLoading","state","groupId","groupIdParam","artifactId","artifactIdParam","redirect","encodeURIComponent","info","Redirect","to","getPathParam","EmptyStateIcon","icon","ExclamationCircleIcon","Button","handleInputChange","value","oldValid","isValid","validate","currentValue","isDirty","onValid","onChange","handleKeyPress","code","onCancel","onSave","InputGroup","TextInput","name","validated","onKeyDown","trim","num","Number","isInteger","ConfigProperty","property","useState","isEditing","setEditing","newPropertyValue","setNewPropertyValue","setValid","onCheckboxChange","checked","onPropertyValueChange","newValue","onPropertyValueValid","valid","onCancelEdit","onStartEditing","onSavePropertyValue","renderStringProp","Flex","FlexItem","label","description","If","condition","PropertyInput","align","PencilAltIcon","isDisabled","CheckIcon","CloseIcon","Switch","isChecked","PROPERTY_GROUPS","propertyNames","acceptProperty","searchCriteria","sc","toLocaleLowerCase","indexOf","onSearchCriteria","criteria","onSearchSettings","filterProperties","onSearchClear","onPropertyChange","setConfigurationProperty","settingChanged","onPropertyReset","resetConfigurationProperty","style","marginTop","marginBottom","maxWidth","SearchInput","placeholder","onSearch","onClear","searchedProperties","propertyGroups","group","key","properties","Card","CardTitle","CardBody","prop","onReset","listConfigurationProperties","groupFor","groups","forEach","sort","prop1","prop2","localeCompare","filteredProperties","contextPath","uiContextPath","basename","Page","isManagedSidebar","header","Route","path","exact","component","RootRedirectPage","RulesPage","SettingsPage","ArtifactRedirectPage","location","pathname","NotFoundPage","authenticateAndRender","document","getElementById","AVRO","PROTOBUF","JSON","OPENAPI","ASYNCAPI","GRAPHQL","KCONNECT","WSDL","XSD","XML"],"sourceRoot":""}