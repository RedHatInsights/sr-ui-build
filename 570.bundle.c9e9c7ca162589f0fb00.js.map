{"version":3,"sources":["webpack://@apicurio/registry-ui/./src/app/pages/roles/components/empty/empty.tsx","webpack://@apicurio/registry-ui/./src/app/pages/roles/components/empty/index.ts","webpack://@apicurio/registry-ui/./src/app/pages/roles/components/modals/grantAccessModal.tsx","webpack://@apicurio/registry-ui/./src/app/pages/roles/components/modals/index.ts","webpack://@apicurio/registry-ui/./src/app/pages/roles/components/roleList/roleList.tsx","webpack://@apicurio/registry-ui/./src/app/pages/roles/components/roleList/index.ts","webpack://@apicurio/registry-ui/./src/app/pages/roles/roles.tsx"],"names":[],"mappings":"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","file":"570.bundle.c9e9c7ca162589f0fb00.js","sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title} from '@patternfly/react-core';\nimport {PlusCircleIcon} from \"@patternfly/react-icons\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {If} from \"../../../../components/common/if\";\n\n/**\n * Properties\n */\nexport interface RoleMappingsEmptyStateProps extends PureComponentProps {\n    isFiltered?: boolean;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RoleMappingsEmptyStateState extends PureComponentState {\n}\n\n\n/**\n * Models the empty state for the Artifacts page (when there are no artifacts).\n */\nexport class RoleMappingsEmptyState extends PureComponent<RoleMappingsEmptyStateProps, RoleMappingsEmptyStateState> {\n\n    constructor(props: Readonly<RoleMappingsEmptyStateProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <EmptyState variant={EmptyStateVariant.full}>\n                <EmptyStateIcon icon={PlusCircleIcon}/>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No Role Mappings\n                </Title>\n                <If condition={() => this.props.isFiltered === true}>\n                    <EmptyStateBody>\n                        No role mappings match your filter settings.  Change your filter or perhaps create a new\n                        role mapping.\n                    </EmptyStateBody>\n                </If>\n                <If condition={() => !this.props.isFiltered}>\n                    <EmptyStateBody>\n                        There are currently no role mappings configured for the registry.  Click the \"Grant Access\"\n                        button above to grant access to a user.\n                    </EmptyStateBody>\n                </If>\n            </EmptyState>\n        );\n    }\n\n    protected initializeState(): RoleMappingsEmptyStateState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./empty\"","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {Button, Form, FormGroup, Modal, TextInput} from '@patternfly/react-core';\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {RoleTypes} from \"../../../../../models\";\n\n/**\n * Properties\n */\nexport interface GrantAccessModalProps extends PureComponentProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onGrant: (principalId: string, role: string) => void;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface GrantAccessModalState extends PureComponentState {\n    isValid: boolean;\n    principalId: string;\n    role: string;\n}\n\n\n/**\n * Models the modal dialog for granting access to a user.\n */\nexport class GrantAccessModal extends PureComponent<GrantAccessModalProps, GrantAccessModalState> {\n\n    constructor(props: Readonly<GrantAccessModalProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <Modal\n                title=\"Grant Access\"\n                variant=\"medium\"\n                isOpen={this.props.isOpen}\n                onClose={this.props.onClose}\n                className=\"grant-access-modal pf-m-redhat-font\"\n                actions={[\n                    <Button key=\"grant\" variant=\"primary\" data-testid=\"modal-btn-grant\" onClick={this.doGrantAccess} isDisabled={!this.state.isValid}>Grant</Button>,\n                    <Button key=\"cancel\" variant=\"link\" data-testid=\"modal-btn-cancel\" onClick={this.props.onClose}>Cancel</Button>\n                ]}\n            >\n\n                <Form>\n                    <FormGroup\n                        label=\"Principal\"\n                        isRequired\n                        fieldId=\"grant-access-principal\"\n                        helperText=\"Please provide a valid principal identifier\"\n                    >\n                        <TextInput\n                            isRequired\n                            type=\"text\"\n                            id=\"grant-access-principal\"\n                            name=\"grant-access-principal\"\n                            aria-describedby=\"grant-access-principal-helper\"\n                            onChange={this.handlePrincipalChange}\n                        />\n                    </FormGroup>\n                    <FormGroup\n                        label=\"Role\"\n                        isRequired\n                        fieldId=\"grant-access-role\"\n                    >\n                        <select\n                            className=\"pf-c-form-control pf-m-placeholder\"\n                            id=\"grant-access-role\"\n                            name=\"grant-access-role\"\n                            aria-label=\"Select a role\"\n                            value={ this.state.role }\n                            onChange={this.handleRoleChange}\n                        >\n                            <option value={ RoleTypes.READ_ONLY }>Viewer</option>\n                            <option value={ RoleTypes.DEVELOPER }>Developer</option>\n                            <option value={ RoleTypes.ADMIN }>Admin</option>\n                        </select>\n                    </FormGroup>\n                </Form>\n\n            </Modal>\n        );\n    }\n\n    protected initializeState(): GrantAccessModalState {\n        return {\n            isValid: false,\n            principalId: \"\",\n            role: RoleTypes.READ_ONLY\n        };\n    }\n\n    public reset(): void {\n        this.setMultiState(this.initializeState());\n    }\n\n    private handlePrincipalChange = (value: string): void => {\n        this.setMultiState({\n            principalId: value,\n            isValid: this.checkValid(value, this.state.role)\n        })\n    };\n\n    private handleRoleChange = (event: any): void => {\n        this.setMultiState({\n            role: event.target.value,\n            isValid: this.checkValid(this.state.principalId, event.target.value)\n        })\n    };\n\n    private doGrantAccess = (): void => {\n        this.props.onGrant(this.state.principalId, this.state.role);\n    }\n\n    private checkValid(principalId: string, role: string): boolean {\n        if (!principalId) {\n            return false;\n        }\n        if (!role) {\n            return false;\n        }\n        return true;\n    }\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./grantAccessModal\"\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport \"./roleList.css\";\nimport {\n    Button,\n    DataList,\n    DataListAction,\n    DataListCell,\n    DataListItemCells,\n    DataListItemRow, Modal\n} from '@patternfly/react-core';\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {RoleMapping, RoleTypes} from \"../../../../../models\";\nimport {UserIcon, UnlockIcon} from \"@patternfly/react-icons\";\n\n/**\n * Properties\n */\nexport interface RoleListProps extends PureComponentProps {\n    roles: RoleMapping[];\n    onRevoke: (principalId: string) => void;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RoleListState extends PureComponentState {\n    isRevokeModalOpen: boolean;\n    revokingPrincipalId: string;\n}\n\n\n/**\n * Models the list of roles.\n */\nexport class RoleList extends PureComponent<RoleListProps, RoleListState> {\n\n    constructor(props: Readonly<RoleListProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <DataList aria-label=\"List of roles\" className=\"role-list\">\n                    {\n                        this.props.roles.sort((rm1, rm2) => {\n                            return rm1.principalId.localeCompare(rm2.principalId);\n                        }).map( (role, idx) =>\n                                <DataListItemRow className=\"role-list-item\" key={role.principalId}>\n                                    <DataListItemCells\n                                        dataListCells={[\n                                            <DataListCell key=\"type icon\" className=\"type-icon-cell\">\n                                                <UserIcon />\n                                            </DataListCell>,\n                                            <DataListCell key=\"main content\" className=\"content-cell\">\n                                                <span className=\"role-txt role-principal\">{ role.principalId }</span>\n                                                <span className=\"role-txt\">has been granted</span>\n                                                <span className=\"role-txt role-role\">{ this.roleName(role.role) }</span>\n                                                <span className=\"role-txt\">access.</span>\n                                            </DataListCell>\n                                        ]}\n                                    />\n                                    <DataListAction\n                                        aria-labelledby={`role-list-revoke-action-${idx}`}\n                                        id={`role-list-revoke-action-${idx}`}\n                                        aria-label=\"Revoke Access\"\n                                    >\n                                        <Button key={role.principalId} variant=\"secondary\" className=\"role-revoke-action\"\n                                                onClick={this.onRevokeRoleMapping(role.principalId)}>\n                                            <UnlockIcon className=\"role-revoke-icon\" />\n                                            <span>Revoke</span>\n                                        </Button>\n                                    </DataListAction>\n                                </DataListItemRow>\n                        )\n                    }\n                </DataList>\n                <Modal\n                    title=\"Revoke Access\"\n                    variant=\"small\"\n                    isOpen={this.state.isRevokeModalOpen}\n                    onClose={this.onRevokeModalClose}\n                    className=\"revoke-access-modal pf-m-redhat-font\"\n                    actions={[\n                        <Button key=\"revoke\" variant=\"primary\" data-testid=\"modal-btn-revoke\" onClick={this.doRevokeAccess}>Revoke</Button>,\n                        <Button key=\"cancel\" variant=\"link\" data-testid=\"modal-btn-cancel\" onClick={this.onRevokeModalClose}>Cancel</Button>\n                    ]}\n                >\n                    <p>Do you really want to revoke { this.state.revokingPrincipalId }'s access?</p>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n\n    protected initializeState(): RoleListState {\n        return {\n            isRevokeModalOpen: false,\n            revokingPrincipalId: \"\"\n        };\n    }\n\n    private roleName(role: string): string {\n        switch (role) {\n            case RoleTypes.DEVELOPER:\n                return \"Developer\";\n            case RoleTypes.ADMIN:\n                return \"Admin\";\n            case RoleTypes.READ_ONLY:\n                return \"Viewer\";\n        }\n        return role;\n    }\n\n    private onRevokeRoleMapping(principalId: string): () => void {\n        return () => {\n            this.setMultiState({\n                isRevokeModalOpen: true,\n                revokingPrincipalId: principalId\n            });\n        };\n    };\n\n    private onRevokeModalClose = (): void => {\n        this.setSingleState(\"isRevokeModalOpen\", false);\n    };\n\n    private doRevokeAccess = (): void => {\n        this.onRevokeModalClose();\n        this.props.onRevoke(this.state.revokingPrincipalId);\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from \"./roleList\";\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./roles.css\";\nimport {Button, Flex, FlexItem, PageSection, PageSectionVariants, TextContent} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {RoleMapping} from \"../../../models\";\nimport {Services} from \"../../../services\";\nimport {GrantAccessModal, RoleList, RoleMappingsEmptyState} from \"./components\";\nimport {PleaseWaitModal, RootPageHeader} from \"../../components\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RolesPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RolesPageState extends PageState {\n    isCreateRoleMappingModalOpen: boolean;\n    roles: RoleMapping[];\n    isPleaseWaitModalOpen: boolean;\n    pleaseWaitMessage: string;\n}\n\n/**\n * The global roles page.\n */\nexport class RolesPage extends PageComponent<RolesPageProps, RolesPageState> {\n\n    constructor(props: Readonly<RolesPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_roles-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={2} />\n                </PageSection>\n                <PageSection className=\"ps_roles-description\" variant={PageSectionVariants.light}>\n                    <Flex>\n                        <FlexItem>\n                            <TextContent>\n                                Manage access to the registry by granting/revoking roles to specific users.\n                            </TextContent>\n                        </FlexItem>\n                        <FlexItem align={{default : \"alignRight\"}}>\n                            <Button variant=\"primary\" data-testid=\"btn-grant-access\" onClick={this.onCreateRoleMapping}>Grant Access</Button>\n                        </FlexItem>\n                    </Flex>\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                    {\n                        this.state.roles.length === 0 ?\n                        <RoleMappingsEmptyState />\n                        :\n                        <RoleList roles={this.state.roles} onRevoke={this.onRevokeRoleMapping}></RoleList>\n                    }\n                </PageSection>\n                <GrantAccessModal isOpen={this.state.isCreateRoleMappingModalOpen}\n                                  onClose={this.closeRoleMappingModal}\n                                  onGrant={this.createRoleMapping} />\n                <PleaseWaitModal message={this.state.pleaseWaitMessage}\n                                 isOpen={this.state.isPleaseWaitModalOpen} />\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): RolesPageState {\n        return {\n            isCreateRoleMappingModalOpen: false,\n            isPleaseWaitModalOpen: false,\n            pleaseWaitMessage: \"\",\n            isLoading: true,\n            roles: []\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().getRoleMappings().then( roles => {\n                this.setMultiState({\n                    isLoading: false,\n                    roles\n                });\n            });\n    }\n\n    private onCreateRoleMapping = (): void => {\n        this.setSingleState(\"isCreateRoleMappingModalOpen\", true);\n    };\n\n    private closeRoleMappingModal = (): void => {\n        this.setSingleState(\"isCreateRoleMappingModalOpen\", false);\n    };\n\n    private createRoleMapping = (principalId: string, role: string): void => {\n        this.closeRoleMappingModal();\n        this.pleaseWait(true, \"Granting access, please wait...\");\n        Services.getAdminService().createRoleMapping(principalId, role).then( (mapping) => {\n            this.pleaseWait(false, \"\");\n            this.setSingleState(\"roles\", [\n                mapping, ...this.state.roles\n            ]);\n        }).catch(e => this.handleServerError(e, \"Error granting access.\"));\n    };\n\n    private onRevokeRoleMapping = (principalId: string): void => {\n        this.pleaseWait(true, `Revoking access for ${principalId}, please wait...`);\n        Services.getAdminService().deleteRoleMapping(principalId).then(() => {\n            this.pleaseWait(false, \"\");\n            this.removeMapping(principalId);\n        }).catch(e => this.handleServerError(e, \"Error revoking access.\"));\n    };\n\n    private pleaseWait = (isOpen: boolean, message: string): void => {\n        this.setMultiState({\n            isPleaseWaitModalOpen: isOpen,\n            pleaseWaitMessage: message\n        });\n    };\n\n    private removeMapping(principalId: string): void {\n        const newRoles: RoleMapping[] =\n            this.state.roles.filter(rm => {\n                return rm.principalId !== principalId;\n            });\n        this.setSingleState(\"roles\", newRoles);\n    }\n\n}\n"],"sourceRoot":""}