{"version":3,"file":"27.bundle.bc33f142e32774c26fb2.js","mappings":"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","sources":["webpack://@apicurio/registry-ui/./src/app/components/common/ifAuth.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifFeature.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/header.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/components/schemaMapping/schemaMapping.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/rules/rules.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifact/artifact.tsx","webpack://@apicurio/registry-ui/./src/app/pages/root/root.tsx","webpack://@apicurio/registry-ui/./src/app/pages/404/404.tsx","webpack://@apicurio/registry-ui/./src/app/app.tsx","webpack://@apicurio/registry-ui/./src/bootstrap.tsx","webpack://@apicurio/registry-ui/./src/models/artifactMetaData.model.ts","webpack://@apicurio/registry-ui/./src/models/artifactTypes.model.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\nimport {AuthService} from \"../../../services/auth\";\n\n/**\n * Properties\n */\nexport interface IfAuthProps extends PureComponentProps {\n    enabled?: boolean;\n    isAuthenticated?: boolean;\n    isAdmin?: boolean;\n    isDeveloper?: boolean;\n    owner?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfAuthState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated authentication parameters are true.\n */\nexport class IfAuth extends PureComponent<IfAuthProps, IfAuthState> {\n\n    constructor(props: Readonly<IfAuthProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfAuthState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const auth: AuthService = Services.getAuthService();\n        let rval: boolean = true;\n        if (this.props.enabled !== undefined) {\n            rval = rval && (auth.isAuthenticationEnabled() === this.props.enabled);\n        }\n        if (this.props.isAuthenticated !== undefined) {\n            rval = rval && (auth.isAuthenticated() === this.props.isAuthenticated);\n        }\n        if (this.props.isAdmin !== undefined) {\n            rval = rval && (auth.isUserAdmin() === this.props.isAdmin);\n        }\n        if (this.props.isDeveloper !== undefined) {\n            rval = rval && (auth.isUserDeveloper(this.props.owner) === this.props.isDeveloper);\n        }\n        return rval;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\n\n/**\n * Properties\n */\nexport interface IfFeatureProps extends PureComponentProps {\n    feature: string;\n    is?: any;\n    isNot?: any;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfFeatureState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated feature matches the given criteria.  Use this if you want to show/hide\n * UI elements based on the configured application feature set.\n */\nexport class IfFeature extends PureComponent<IfFeatureProps, IfFeatureState> {\n\n    constructor(props: Readonly<IfFeatureProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfFeatureState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const features: any = Services.getConfigService().features();\n        const featureValue: any = features[this.props.feature];\n        if (this.props.is !== undefined) {\n            return featureValue === this.props.is;\n        } else if (this.props.isNot !== undefined) {\n            return featureValue !== this.props.isNot;\n        } else {\n            return featureValue !== undefined;\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./header.css\"\nimport {Brand, PageHeader, PageHeaderTools, PageHeaderToolsGroup, PageHeaderToolsItem} from '@patternfly/react-core';\nimport brandImg from \"./apicurio_logo_darkbkg_350px.png\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth} from \"../common/ifAuth\";\nimport {AvatarDropdown} from \"./avatarDropdown\";\n\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderProps extends PureComponentProps {\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderState extends PureComponentState {\n}\n\n\nexport class AppHeader extends PureComponent<AppHeaderProps, AppHeaderState> {\n\n    constructor(props: Readonly<AppHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let pageToolbar: React.ReactElement;\n        pageToolbar = (\n            <PageHeaderTools className=\"header-toolbar\">\n                <PageHeaderToolsGroup>\n                    <PageHeaderToolsItem id=\"avatar\">\n                        <IfAuth enabled={true}>\n                            <AvatarDropdown />\n                        </IfAuth>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n        );\n\n        return (<PageHeader\n            logo={<Brand onClick={this.navigateTo(this.linkTo(\"/artifacts\"))} src={brandImg} alt=\"Apicurio Registry\"/>}\n            showNavToggle={false}\n            headerTools={pageToolbar}\n        />);\n    }\n\n    protected initializeState(): AppHeaderState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {Tab, Tabs, TabTitleText} from '@patternfly/react-core';\nimport \"./pageheader.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth, IfFeature} from \"../common\";\nimport {Services} from \"../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderProps extends PureComponentProps {\n    tabKey: number;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifacts page.\n */\nexport class RootPageHeader extends PureComponent<RootPageHeaderProps, RootPageHeaderState> {\n\n    constructor(props: Readonly<RootPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let tabs: any[] = [\n            <Tab eventKey={0} title={<TabTitleText>Artifacts</TabTitleText>} />,\n            <Tab eventKey={1} title={<TabTitleText>Global Rules</TabTitleText>} />\n        ];\n        if (Services.getConfigService().featureRoleManagement()) {\n            tabs.push(\n                <Tab eventKey={2} title={<TabTitleText>Permissions</TabTitleText>} />\n            );\n        }\n        return (\n            <div>\n                <IfAuth isAdmin={true}>\n                    <Tabs activeKey={this.props.tabKey} onSelect={this.handleTabClick} children={tabs} />\n                </IfAuth>\n            </div>\n        );\n    }\n\n    protected initializeState(): RootPageHeaderState {\n        return {};\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string): void => {\n        if (eventKey != this.props.tabKey) {\n            if (eventKey == 0) {\n                // navigate to artifacts\n                this.navigateTo(this.linkTo(\"/artifacts\"))();\n            }\n            if (eventKey == 1) {\n                // navigate to global rules\n                this.navigateTo(this.linkTo(\"/rules\"))();\n            }\n            if (eventKey == 2) {\n                // navigate to permissions page\n                this.navigateTo(this.linkTo(\"/roles\"))();\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {SchemaMapping, SchemaMappingProps} from \"./schemaMapping\";\nimport {FederatedComponentProps, FederatedUtils} from \"../../federated\";\n\nexport interface FederatedSchemaMappingProps extends SchemaMappingProps, FederatedComponentProps {\n}\n\nexport default class FederatedSchemaMapping extends SchemaMapping {\n\n    constructor(props: Readonly<FederatedSchemaMappingProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedSchemaMappingProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./rules.css\";\nimport {PageSection, PageSectionVariants, TextContent} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {RuleList} from \"../../components/ruleList\";\nimport {Rule} from \"../../../models\";\nimport {Services} from \"../../../services\";\nimport {RootPageHeader} from \"../../components\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageState extends PageState {\n    rules: Rule[] | null;\n}\n\n/**\n * The global rules page.\n */\nexport class RulesPage extends PageComponent<RulesPageProps, RulesPageState> {\n\n    constructor(props: Readonly<RulesPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_rules-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={1} />\n                </PageSection>\n                <PageSection className=\"ps_rules-description\" variant={PageSectionVariants.light}>\n                    <TextContent>\n                        Manage the list of Global Rules configured for the Registry below.  Rules can be enabled/disabled\n                        and also individually configured.\n                    </TextContent>\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                    <React.Fragment>\n                        <RuleList rules={this.rules()}\n                                  onEnableRule={this.doEnableRule}\n                                  onDisableRule={this.doDisableRule}\n                                  onConfigureRule={this.doConfigureRule} />\n                    </React.Fragment>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): RulesPageState {\n        return {\n            isLoading: true,\n            rules: null\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().getRules().then( rules => {\n                this.setMultiState({\n                    isLoading: false,\n                    rules\n                });\n            });\n    }\n\n    private rules(): Rule[] {\n        if (this.state.rules) {\n            return this.state.rules;\n        } else {\n            return [];\n        }\n    }\n\n    private doEnableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Enabling global rule:\", ruleType);\n        let config: string = \"FULL\";\n        if (ruleType === \"COMPATIBILITY\") {\n            config = \"BACKWARD\";\n        }\n        Services.getAdminService().createRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error enabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", [...this.rules(), {config, type: ruleType}]);\n    };\n\n    private doDisableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Disabling global rule:\", ruleType);\n        Services.getAdminService().deleteRule(ruleType).catch(error => {\n            this.handleServerError(error, `Error disabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().filter(r => r.type !== ruleType));\n    };\n\n    private doConfigureRule = (ruleType: string, config: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Configuring global rule:\", ruleType, config);\n        Services.getAdminService().updateRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error configuring \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().map(r => {\n            if (r.type === ruleType) {\n                return {config, type: r.type};\n            } else {\n                return r;\n            }\n        }));\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {Services} from \"../../../services\";\nimport {Redirect} from \"react-router-dom\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactRedirectPageProps extends PageProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactRedirectPageState extends PageState {\n}\n\n/**\n * The artifact details redirect page.\n */\nexport class ArtifactRedirectPage extends PageComponent<ArtifactRedirectPageProps, ArtifactRedirectPageState> {\n\n    constructor(props: Readonly<ArtifactRedirectPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        const groupId: any = this.groupIdParam();\n        const artifactId: any = this.artifactIdParam();\n        const redirect: string = this.linkTo(`/artifacts/${ encodeURIComponent(groupId) }/${ encodeURIComponent(artifactId) }/versions/latest`);\n        Services.getLoggerService().info(\"[ArtifactRedirectPage] Redirecting to: %s\", redirect);\n        return (\n            <Redirect to={redirect}  />\n        );\n    }\n\n    protected groupIdParam(): string {\n        return this.getPathParam(\"groupId\");\n    }\n\n    protected artifactIdParam(): string {\n        return this.getPathParam(\"artifactId\");\n    }\n\n    protected initializePageState(): ArtifactRedirectPageState {\n        return {};\n    }\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {Redirect} from \"react-router\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootRedirectPageProps extends PageProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootRedirectPageState extends PageState {\n}\n\n/**\n * The artifact details redirect page.\n */\nexport class RootRedirectPage extends PageComponent<RootRedirectPageProps, RootRedirectPageState> {\n\n    constructor(props: Readonly<RootRedirectPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        const redirect: string = `/artifacts`;\n        return (\n            <Redirect to={redirect}  />\n        );\n    }\n\n    protected initializePageState(): RootRedirectPageState {\n        return {};\n    }\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from \"@patternfly/react-core\";\nimport {ExclamationCircleIcon} from \"@patternfly/react-icons\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NotFoundPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface NotFoundPageState extends PageState {\n}\n\n/**\n * The global rules page.\n */\nexport class NotFoundPage extends PageComponent<NotFoundPageProps, NotFoundPageState> {\n\n    constructor(props: Readonly<NotFoundPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_rules-header\" variant={PageSectionVariants.light}>\n                    <EmptyState variant={EmptyStateVariant.full}>\n                        <EmptyStateIcon icon={ExclamationCircleIcon} />\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                            404 Error: page not found\n                        </Title>\n                        <EmptyStateBody>\n                            This page couldn't be found.  If you think this is a bug, please report the issue.\n                        </EmptyStateBody>\n                        <Button variant=\"primary\"\n                                data-testid=\"error-btn-artifacts\"\n                                onClick={this.navigateTo(this.linkTo(\"/artifacts\"))}>Show all artifacts</Button>\n                    </EmptyState>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): NotFoundPageState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {Page} from \"@patternfly/react-core\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {AppHeader} from \"./components/header\";\nimport {RulesPage} from \"./pages/rules\";\nimport {ArtifactsPage} from \"./pages/artifacts\";\nimport {ArtifactRedirectPage} from \"./pages/artifact\";\nimport {ArtifactVersionPage} from \"./pages/artifactVersion\";\nimport {RootRedirectPage} from \"./pages/root\";\nimport {NotFoundPage} from \"./pages/404\";\nimport {Services} from \"../services\";\nimport {RolesPage} from \"./pages\";\n\n\n/**\n * The main application class.\n */\nexport default class App extends React.PureComponent<{}, {}> {\n\n    constructor(props: Readonly<any>) {\n        super(props);\n    }\n\n    public render() {\n        const contextPath: string|undefined = Services.getConfigService().uiContextPath();\n        Services.getLoggerService().info(\"[App] Using app contextPath: \", contextPath);\n\n        // Function to force the Artifact Version Page to fully remount each time we navigate to it.  This\n        // is needed because we want the page to fully rerender whenever the browser location changes, which\n        // happens when switching between versions of the artifact content (e.g. switch from version 1 to version 3).\n        const artifactVersionPage = (props: any): React.ReactElement => {\n            const location: string = props.location.pathname;\n            return (\n                <ArtifactVersionPage key={location} {...props} />\n            );\n        };\n\n        return (\n            <Router basename={contextPath}>\n                <Page\n                    className=\"pf-m-redhat-font\"\n                    isManagedSidebar={false}\n                    header={<AppHeader/>}\n                >\n                    <Switch>\n                        <Route path='/' exact={true} component={RootRedirectPage}/>\n                        <Route path='/rules' exact={true} component={RulesPage}/>\n                        <Route path='/roles' exact={true} component={RolesPage}/>\n                        <Route path='/artifacts' exact={true} component={ArtifactsPage}/>\n                        <Route path='/artifacts/:groupId/:artifactId' exact={true} component={ArtifactRedirectPage}/>\n                        <Route path='/artifacts/:groupId/:artifactId/versions/:version' exact={true} component={artifactVersionPage} />\n                        <Route component={NotFoundPage} />\n                    </Switch>\n                </Page>\n            </Router>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport App from \"./app/app\";\nimport \"./app/app.css\";\nimport {Services} from \"./services\";\n\n\nconst renderApp = () => ReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\nServices.getAuthService().authenticateAndRender(renderApp);\n\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class ArtifactMetaData {\n\n    public groupId: string|null;\n    public id: string;\n    public name: string|null;\n    public description: string|null;\n    public labels: string[]|null;\n    public type: string;\n    public version: number;\n    public createdBy: string;\n    public createdOn: Date;\n    public modifiedBy: string;\n    public modifiedOn: Date;\n    public globalId: number;\n    public contentId: number|null;\n    public state: string;\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:interface-name\nexport class ArtifactTypes {\n\n    public static AVRO: string = \"AVRO\";\n    public static PROTOBUF: string = \"PROTOBUF\";\n    public static JSON: string = \"JSON\";\n    public static OPENAPI: string = \"OPENAPI\";\n    public static ASYNCAPI: string = \"ASYNCAPI\";\n    public static GRAPHQL: string = \"GRAPHQL\";\n    public static KCONNECT: string = \"KCONNECT\";\n    public static WSDL: string = \"WSDL\";\n    public static XSD: string = \"XSD\";\n    public static XML: string = \"XML\";\n\n}\n"],"names":["props","render","this","accept","children","initializeState","auth","Services","rval","undefined","enabled","isAuthenticationEnabled","isAuthenticated","isAdmin","isUserAdmin","isDeveloper","isUserDeveloper","owner","featureValue","features","feature","is","isNot","pageToolbar","PageHeaderTools","className","PageHeaderToolsGroup","PageHeaderToolsItem","id","PageHeader","logo","Brand","onClick","navigateTo","linkTo","src","alt","showNavToggle","headerTools","handleTabClick","event","eventKey","tabKey","tabs","Tab","title","TabTitleText","featureRoleManagement","push","Tabs","activeKey","onSelect","postConstruct","doEnableRule","ruleType","debug","config","createRule","catch","error","handleServerError","setSingleState","rules","type","doDisableRule","deleteRule","filter","r","doConfigureRule","updateRule","map","renderPage","PageSection","variant","PageSectionVariants","padding","default","TextContent","isFilled","onEnableRule","onDisableRule","onConfigureRule","initializePageState","isLoading","createLoaders","getRules","then","setMultiState","state","groupId","groupIdParam","artifactId","artifactIdParam","redirect","encodeURIComponent","info","Redirect","to","getPathParam","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","Button","contextPath","uiContextPath","basename","Page","isManagedSidebar","header","Switch","Route","path","exact","component","RootRedirectPage","RulesPage","ArtifactRedirectPage","location","pathname","key","NotFoundPage","authenticateAndRender","document","getElementById","AVRO","PROTOBUF","JSON","OPENAPI","ASYNCAPI","GRAPHQL","KCONNECT","WSDL","XSD","XML"],"sourceRoot":""}