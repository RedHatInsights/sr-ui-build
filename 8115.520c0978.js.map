{"version":3,"file":"8115.520c0978.js","mappings":"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","sources":["webpack://@apicurio/registry-ui/./src/app/components/common/ifAuth.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifFeature.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifNotEmpty.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/header.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/components/schemaMapping/schemaMapping.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/roles/roles.tsx","webpack://@apicurio/registry-ui/./src/models/artifactMetaData.model.ts","webpack://@apicurio/registry-ui/./src/models/artifactTypes.model.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { Services } from \"../../../services\";\nimport { AuthService } from \"../../../services/auth\";\n\n/**\n * Properties\n */\nexport interface IfAuthProps extends PureComponentProps {\n    enabled?: boolean;\n    isAuthenticated?: boolean;\n    isAdmin?: boolean;\n    isDeveloper?: boolean;\n    isOwner?: boolean;\n    isAdminOrOwner?: boolean;\n    owner?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfAuthState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated authentication parameters are true.\n */\nexport class IfAuth extends PureComponent<IfAuthProps, IfAuthState> {\n\n    constructor(props: Readonly<IfAuthProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfAuthState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const auth: AuthService = Services.getAuthService();\n        let rval: boolean = true;\n        if (this.props.enabled !== undefined) {\n            rval = rval && (auth.isAuthenticationEnabled() === this.props.enabled);\n        }\n        if (this.props.isAuthenticated !== undefined) {\n            rval = rval && (auth.isAuthenticated() === this.props.isAuthenticated);\n        }\n        if (this.props.isAdmin !== undefined) {\n            rval = rval && (auth.isUserAdmin() === this.props.isAdmin);\n        }\n        if (this.props.isDeveloper !== undefined) {\n            rval = rval && (auth.isUserDeveloper(this.props.owner) === this.props.isDeveloper);\n        }\n        if (this.props.isOwner !== undefined && this.props.owner) {\n            if (this.props.isOwner) {\n                rval = rval && (auth.isUserId(this.props.owner));\n            } else {\n                rval = rval && (!auth.isUserId(this.props.owner));\n            }\n        }\n        if (this.props.isAdminOrOwner === true && this.props.owner) {\n            rval = rval && (\n                auth.isUserAdmin() === true ||\n                auth.isUserId(this.props.owner)\n            );\n        }\n        return rval;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { Services } from \"../../../services\";\n\n/**\n * Properties\n */\nexport interface IfFeatureProps extends PureComponentProps {\n    feature: string;\n    is?: any;\n    isNot?: any;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfFeatureState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated feature matches the given criteria.  Use this if you want to show/hide\n * UI elements based on the configured application feature set.\n */\nexport class IfFeature extends PureComponent<IfFeatureProps, IfFeatureState> {\n\n    constructor(props: Readonly<IfFeatureProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfFeatureState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const features: any = Services.getConfigService().features();\n        const featureValue: any = features[this.props.feature];\n        if (this.props.is !== undefined) {\n            return featureValue === this.props.is;\n        } else if (this.props.isNot !== undefined) {\n            return featureValue !== this.props.isNot;\n        } else {\n            return featureValue !== undefined;\n        }\n    }\n\n}\n","import React, { FunctionComponent } from \"react\";\nimport { EmptyState, EmptyStateBody, EmptyStateVariant, Title } from \"@patternfly/react-core\";\n\n/**\n * Properties\n */\nexport interface IfNotEmptyProps {\n    collection?: any[] | undefined;\n    emptyState?: React.ReactNode;\n    emptyStateTitle?: string;\n    emptyStateMessage?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * provided collection is not empty.  If the provided collection is empty, then\n * an empty state control is displayed instead.\n */\nexport const IfNotEmpty: FunctionComponent<IfNotEmptyProps> = ({collection, emptyState, emptyStateTitle, emptyStateMessage, children}: IfNotEmptyProps) => {\n    const isEmpty = () => {\n        return !collection || collection.length === 0;\n    };\n\n    const empty: React.ReactNode = emptyState || (\n        <EmptyState variant={EmptyStateVariant.xs}>\n            <Title headingLevel=\"h4\" size=\"md\">{emptyStateTitle || \"None found\"}</Title>\n            <EmptyStateBody>{emptyStateMessage || \"No items found.\"}</EmptyStateBody>\n        </EmptyState>\n    );\n\n    return isEmpty() ?\n        <React.Fragment children={empty}/> :\n        <React.Fragment children={children} />\n};\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./header.css\";\nimport { Brand, PageHeader, PageHeaderTools, PageHeaderToolsGroup, PageHeaderToolsItem } from \"@patternfly/react-core\";\nimport brandImg from \"./apicurio_logo_darkbkg_350px.png\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { IfAuth } from \"../common/ifAuth\";\nimport { AvatarDropdown } from \"./avatarDropdown\";\n\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderProps extends PureComponentProps {\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderState extends PureComponentState {\n}\n\n\nexport class AppHeader extends PureComponent<AppHeaderProps, AppHeaderState> {\n\n    constructor(props: Readonly<AppHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let pageToolbar: React.ReactElement;\n        pageToolbar = (\n            <PageHeaderTools className=\"header-toolbar\">\n                <PageHeaderToolsGroup>\n                    <PageHeaderToolsItem id=\"avatar\">\n                        <IfAuth enabled={true}>\n                            <AvatarDropdown />\n                        </IfAuth>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n        );\n\n        return (<PageHeader\n            logo={<Brand onClick={this.navigateTo(this.linkTo(\"/artifacts\"))} src={brandImg} alt=\"Apicurio Registry\"/>}\n            showNavToggle={false}\n            headerTools={pageToolbar}\n        />);\n    }\n\n    protected initializeState(): AppHeaderState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { Tab, Tabs, TabTitleText } from \"@patternfly/react-core\";\nimport \"./pageheader.css\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { IfAuth } from \"../common\";\nimport { Services } from \"../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderProps extends PureComponentProps {\n    tabKey: number;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifacts page.\n */\nexport class RootPageHeader extends PureComponent<RootPageHeaderProps, RootPageHeaderState> {\n\n    constructor(props: Readonly<RootPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        const tabs: any[] = [\n            <Tab key={0} eventKey={0} title={<TabTitleText>Artifacts</TabTitleText>} />,\n            <Tab key={1} eventKey={1} title={<TabTitleText>Global rules</TabTitleText>} />\n        ];\n        if (Services.getConfigService().featureRoleManagement()) {\n            tabs.push(\n                <Tab key={2} eventKey={2} title={<TabTitleText>Access</TabTitleText>} />\n            );\n        }\n        if (Services.getConfigService().featureSettings()) {\n            tabs.push(\n                <Tab key={3} eventKey={3} title={<TabTitleText>Settings</TabTitleText>} />\n            );\n        }\n        return (\n            <div>\n                <IfAuth isAdmin={true}>\n                    <Tabs activeKey={this.props.tabKey} onSelect={this.handleTabClick} children={tabs} />\n                </IfAuth>\n            </div>\n        );\n    }\n\n    protected initializeState(): RootPageHeaderState {\n        return {};\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string): void => {\n        if (eventKey !== this.props.tabKey) {\n            if (eventKey === 0) {\n                // navigate to artifacts\n                this.navigateTo(this.linkTo(\"/artifacts\"))();\n            }\n            if (eventKey === 1) {\n                // navigate to global rules\n                this.navigateTo(this.linkTo(\"/rules\"))();\n            }\n            if (eventKey === 2) {\n                // navigate to permissions page\n                this.navigateTo(this.linkTo(\"/roles\"))();\n            }\n            if (eventKey === 3) {\n                // navigate to settings page\n                this.navigateTo(this.linkTo(\"/settings\"))();\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SchemaMapping, SchemaMappingProps } from \"./schemaMapping\";\nimport { FederatedComponentProps, FederatedUtils } from \"../../federated\";\n\nexport interface FederatedSchemaMappingProps extends SchemaMappingProps, FederatedComponentProps {\n}\n\nexport default class FederatedSchemaMapping extends SchemaMapping {\n\n    constructor(props: Readonly<FederatedSchemaMappingProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedSchemaMappingProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./roles.css\";\nimport {\n    Button,\n    ButtonVariant,\n    InputGroup,\n    PageSection,\n    PageSectionVariants,\n    Select,\n    SelectOption,\n    SelectOptionObject,\n    SelectVariant,\n    TextInput,\n    Toolbar,\n    ToolbarContent,\n    ToolbarFilter,\n    ToolbarGroup,\n    ToolbarItem\n} from \"@patternfly/react-core\";\nimport { SearchIcon } from \"@patternfly/react-icons\";\nimport { PageComponent, PageProps, PageState } from \"../basePage\";\nimport { RoleMapping } from \"../../../models\";\nimport { Principal, Services } from \"../../../services\";\nimport { GrantAccessModal, RoleList, RoleMappingsEmptyState } from \"./components\";\nimport { PleaseWaitModal, RootPageHeader } from \"../../components\";\nimport { If } from \"../../components/common/if\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RolesPageProps extends PageProps {\n    principalSelect: any\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RolesPageState extends PageState {\n    isCreateRoleMappingModalOpen: boolean;\n    isRoleMappingUpdate: boolean;\n    roles: RoleMapping[];\n    roleFilter: RoleMapping;\n    roleListFilterOpened: boolean;\n    roleFilterSelected: string;\n    roleFilterTextInputValue: string;\n    roleFilterSelectInputValue: string;\n    roleFilterSelectInputOpened: boolean;\n    selectedRole: RoleMapping | undefined;\n    isPleaseWaitModalOpen: boolean;\n    pleaseWaitMessage: string;\n}\n\nconst roleFilterOptions = ['Account', 'Role'];\n/**\n * The global roles page.\n */\nexport class RolesPage extends PageComponent<RolesPageProps, RolesPageState> {\n\n    constructor(props: Readonly<RolesPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_roles-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={2} />\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true} className=\"ps_role-section\">\n                    {\n                        this.state.roles.length === 0 ?\n                            <RoleMappingsEmptyState onCreateRoleMapping={this.onCreateRoleMapping}/>\n                            :\n                            <>\n                                <Toolbar id=\"toolbar\" clearAllFilters={() => {\n                                    this.setSingleState(\"roleFilter\", {\n                                        principalId: \"\",\n                                        role: \"\",\n                                        principalName: \"\"\n                                    });\n                                }}>\n                                    <ToolbarContent>\n                                        <ToolbarGroup>\n                                            <ToolbarItem className=\"ps_role-filter-select-toolbar-item\">\n                                                <Select\n                                                    variant={SelectVariant.single}\n                                                    aria-label=\"Filter On\"\n                                                    onToggle={this.onRoleFilterToggle}\n                                                    onSelect={this.onRoleFilterSelect}\n                                                    selections={this.state.roleFilterSelected}\n                                                    isOpen={this.state.roleListFilterOpened}\n                                                >\n                                                    {roleFilterOptions.map((option, index) => (\n                                                        <SelectOption key={index} value={option} />\n                                                    ))}\n                                                </Select>\n                                            </ToolbarItem>\n                                            <ToolbarItem>\n                                                <InputGroup>\n                                                    {\n                                                        this.isRoleFilterSelected() ?\n                                                            <Select\n                                                                variant={SelectVariant.single}\n                                                                aria-label=\"Role\"\n                                                                onToggle={this.onRoleFilterSelectToggle}\n                                                                onSelect={this.onRoleFilterSelectChange}\n                                                                isOpen={this.state.roleFilterSelectInputOpened}\n                                                                placeholderText=\"Filter by role\"\n                                                            >\n                                                                <SelectOption key={1} value=\"Administrator\" />\n                                                                <SelectOption key={2} value=\"Manager\" />\n                                                                <SelectOption key={3} value=\"Viewer\" />\n                                                            </Select>\n                                                            :\n                                                            <TextInput value={this.state.roleFilterTextInputValue}\n                                                                       placeholder=\"Filter by account\"\n                                                                       name=\"roleFilterInput\" id=\"roleFilterInput\"\n                                                                       type=\"search\" aria-label=\"role filter input\"\n                                                                       onKeyDown={this.onRoleFilterTextInputKeydown}\n                                                                       onChange={this.onRoleFilterInputChange} />\n                                                    }\n                                                    <If condition={this.isAccountFilterSelected}>\n                                                        <Button variant={ButtonVariant.control} aria-label=\"search button for search input\" onClick={this.onRoleFilterApplyClick}>\n                                                            <SearchIcon />\n                                                        </Button>\n                                                    </If>\n                                                </InputGroup>\n                                            </ToolbarItem>\n                                            <ToolbarItem>\n                                                <Button variant=\"primary\" data-testid=\"btn-grant-access\" onClick={this.onCreateRoleMapping}>Grant access</Button>\n                                            </ToolbarItem>\n                                            <ToolbarFilter chips={this.state.roleFilter.principalId.length > 0 ? [this.state.roleFilter.principalId] : undefined}\n                                                deleteChip={() => {\n                                                    this.setSingleState(\"roleFilter\", {\n                                                        principalId: \"\",\n                                                        role: this.state.roleFilter.role,\n                                                        principalName: \"\"\n                                                    });\n                                                }}\n                                                categoryName=\"Account\"> </ToolbarFilter>\n                                            <ToolbarFilter chips={this.state.roleFilter.role.length > 0 ? [this.state.roleFilter.role] : undefined}\n                                                deleteChip={() => {\n                                                    this.setSingleState(\"roleFilter\", {\n                                                        principalId: this.state.roleFilter.principalId,\n                                                        role: \"\",\n                                                        principalName: this.state.roleFilter.principalName,\n                                                    });\n                                                }}\n                                                categoryName=\"Role\"> </ToolbarFilter>\n\n                                        </ToolbarGroup>\n                                    </ToolbarContent>\n                                </Toolbar>\n                                <RoleList roles={this.state.roles} roleFilter={this.state.roleFilter} onRevoke={this.onRevokeRoleMapping} onEditRoleMapping={this.onEditRoleMapping}></RoleList>\n                            </>}\n                </PageSection>\n                <GrantAccessModal isOpen={this.state.isCreateRoleMappingModalOpen}\n                    isUpdateAccess={this.state.isRoleMappingUpdate}\n                    onClose={this.closeRoleMappingModal}\n                    onGrant={this.createRoleMapping}\n                    roles={this.state.isRoleMappingUpdate ? this.state.roles : null}\n                    defaultRole={this.state.selectedRole} />\n                <PleaseWaitModal message={this.state.pleaseWaitMessage}\n                                 isOpen={this.state.isPleaseWaitModalOpen} />\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): RolesPageState {\n        return {\n            isCreateRoleMappingModalOpen: false,\n            isPleaseWaitModalOpen: false,\n            isRoleMappingUpdate: false,\n            pleaseWaitMessage: \"\",\n            selectedRole: undefined,\n            roles: [],\n            roleFilter: { principalId: \"\", role: \"\", principalName: \"\" },\n            roleListFilterOpened: false,\n            roleFilterSelected: roleFilterOptions[0],\n            roleFilterTextInputValue: \"\",\n            roleFilterSelectInputValue: \"\",\n            roleFilterSelectInputOpened: false\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().getRoleMappings().then(roles => {\n            this.setMultiState({\n                isLoading: false,\n                roles\n            });\n        });\n    }\n\n    private onRoleFilterToggle = (isExpanded: boolean): void => {\n        this.setSingleState(\"roleListFilterOpened\", isExpanded)\n    }\n    private onRoleFilterSelectToggle = (isExpanded: boolean): void => {\n        this.setSingleState(\"roleFilterSelectInputOpened\", isExpanded)\n    }\n\n    private onRoleFilterSelect = (_event: any, selection: string | SelectOptionObject, isPlaceholder: boolean | undefined) => {\n        this.setMultiState({\n            roleFilterSelected: selection as string,\n            roleListFilterOpened: false\n        });\n    };\n\n    private onRoleFilterInputChange = (value: string) => {\n        this.setSingleState(\"roleFilterTextInputValue\", value)\n    }\n    private onRoleFilterTextInputKeydown = (event: any) => {\n        if (event.key === \"Enter\") {\n            this.onRoleFilterApplyClick();\n        }\n    };\n    private onRoleFilterApplyClick = () => {\n        let newRoleMappingFilter: RoleMapping = {\n            principalId: this.state.roleFilterSelected == roleFilterOptions[0] ? this.state.roleFilterTextInputValue : this.state.roleFilter?.principalId,\n            role: this.state.roleFilterSelected == roleFilterOptions[1] ? this.state.roleFilterSelectInputValue : this.state.roleFilter.role,\n            principalName: this.state.roleFilterSelected == roleFilterOptions[0] ? this.state.roleFilterTextInputValue : this.state.roleFilter?.principalId\n        }\n        this.setMultiState({\n            roleFilter: newRoleMappingFilter,\n            roleFilterTextInputValue: \"\"\n        });\n    }\n    private onCreateRoleMapping = (): void => {\n        this.setSingleState(\"isCreateRoleMappingModalOpen\", true);\n    };\n\n    private isAccountFilterSelected = (): boolean => {\n        return this.state.roleFilterSelected == roleFilterOptions[0];\n    };\n    private isRoleFilterSelected = (): boolean => {\n        return this.state.roleFilterSelected == roleFilterOptions[1];\n    };\n\n    private onRoleFilterSelectChange = (_event: any, selection: string | SelectOptionObject, isPlaceholder: boolean | undefined) => {\n        this.setMultiState({\n            roleFilterSelectInputValue: selection as string,\n            roleFilterSelectInputOpened: false\n        }, () => this.onRoleFilterApplyClick());\n    };\n\n    private closeRoleMappingModal = (): void => {\n        this.setMultiState({\n            selectedRole: undefined,\n            isRoleMappingUpdate: false,\n            isCreateRoleMappingModalOpen: false\n        });\n    };\n\n    private onEditRoleMapping = (role: RoleMapping) => {\n        this.setMultiState({\n            selectedRole: role,\n            isRoleMappingUpdate: true\n        })\n        this.onCreateRoleMapping();\n    }\n\n    private updateRoleMapping = (principal: Principal, role: string): void => {\n        this.pleaseWait(true, \"Granting access, please wait...\");\n        Services.getAdminService().updateRoleMapping(principal.id, role).then((mapping) => {\n            const currentRoleMappings = this.state.roles;\n            currentRoleMappings.forEach((role, index) => {\n                if (role.principalId === mapping.principalId) {\n                    currentRoleMappings[index] = {\n                        ...mapping,\n                        principalName: principal.displayName as string\n                    };\n                }\n            });\n\n            this.pleaseWait(false, \"\");\n            this.setSingleState(\"roles\", [\n                ...currentRoleMappings\n            ]);\n        }).catch(e => this.handleServerError(e, \"Error updating access.\"));\n    };\n\n    private createRoleMapping = (principal: Principal, role: string, isUpdate: boolean): void => {\n        this.closeRoleMappingModal();\n        if (isUpdate) {\n            this.updateRoleMapping(principal, role);\n        } else {\n            this.pleaseWait(true, \"Granting access, please wait...\");\n            Services.getAdminService().createRoleMapping(principal.id, role, principal.displayName as string).then((mapping) => {\n                this.pleaseWait(false, \"\");\n                this.setSingleState(\"roles\", [\n                    mapping, ...this.state.roles\n                ]);\n            }).catch(e => {\n                if (e?.error_code === 409) {\n                    // If we get a conflict when trying to create, that means the mapping already exists\n                    // and we should instead update.\n                    this.updateRoleMapping(principal, role);\n                } else {\n                    this.handleServerError(e, \"Error granting access.\");\n                }\n            });\n        }\n    };\n\n    private onRevokeRoleMapping = (principalId: string): void => {\n        this.pleaseWait(true, `Revoking access for ${principalId}, please wait...`);\n        Services.getAdminService().deleteRoleMapping(principalId).then(() => {\n            this.pleaseWait(false, \"\");\n            this.removeMapping(principalId);\n        }).catch(e => this.handleServerError(e, \"Error revoking access.\"));\n    };\n\n    private pleaseWait = (isOpen: boolean, message: string): void => {\n        this.setMultiState({\n            isPleaseWaitModalOpen: isOpen,\n            pleaseWaitMessage: message\n        });\n    };\n\n    private removeMapping(principalId: string): void {\n        const newRoles: RoleMapping[] =\n            this.state.roles.filter(rm => {\n                return rm.principalId !== principalId;\n            });\n        this.setSingleState(\"roles\", newRoles);\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class ArtifactMetaData {\n\n    public groupId: string|null;\n    public id: string;\n    public name: string|null;\n    public description: string|null;\n    public labels: string[]|null;\n    public properties: { [key: string]: string };\n    public type: string;\n    public version: string;\n    public createdBy: string;\n    public createdOn: Date;\n    public modifiedBy: string;\n    public modifiedOn: Date;\n    public globalId: number;\n    public contentId: number|null;\n    public state: string;\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:interface-name\nexport class ArtifactTypes {\n\n    public static AVRO: string = \"AVRO\";\n    public static PROTOBUF: string = \"PROTOBUF\";\n    public static JSON: string = \"JSON\";\n    public static OPENAPI: string = \"OPENAPI\";\n    public static ASYNCAPI: string = \"ASYNCAPI\";\n    public static GRAPHQL: string = \"GRAPHQL\";\n    public static KCONNECT: string = \"KCONNECT\";\n    public static WSDL: string = \"WSDL\";\n    public static XSD: string = \"XSD\";\n    public static XML: string = \"XML\";\n\n}\n"],"names":["props","render","this","accept","children","initializeState","auth","rval","undefined","enabled","isAuthenticationEnabled","isAuthenticated","isAdmin","isUserAdmin","isDeveloper","isUserDeveloper","owner","isOwner","isUserId","isAdminOrOwner","featureValue","features","feature","is","isNot","IfNotEmpty","collection","emptyState","emptyStateTitle","emptyStateMessage","empty","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","length","pageToolbar","PageHeaderTools","className","PageHeaderToolsGroup","PageHeaderToolsItem","id","PageHeader","logo","Brand","onClick","navigateTo","linkTo","src","alt","showNavToggle","headerTools","handleTabClick","event","eventKey","tabKey","tabs","Tab","key","title","TabTitleText","featureRoleManagement","push","featureSettings","Tabs","activeKey","onSelect","postConstruct","roleFilterOptions","onRoleFilterToggle","isExpanded","setSingleState","onRoleFilterSelectToggle","onRoleFilterSelect","_event","selection","isPlaceholder","setMultiState","roleFilterSelected","roleListFilterOpened","onRoleFilterInputChange","value","onRoleFilterTextInputKeydown","onRoleFilterApplyClick","newRoleMappingFilter","principalId","state","roleFilterTextInputValue","roleFilter","role","roleFilterSelectInputValue","principalName","onCreateRoleMapping","isAccountFilterSelected","isRoleFilterSelected","onRoleFilterSelectChange","roleFilterSelectInputOpened","closeRoleMappingModal","selectedRole","isRoleMappingUpdate","isCreateRoleMappingModalOpen","onEditRoleMapping","updateRoleMapping","principal","pleaseWait","then","mapping","currentRoleMappings","roles","forEach","index","displayName","catch","e","handleServerError","createRoleMapping","isUpdate","error_code","onRevokeRoleMapping","deleteRoleMapping","removeMapping","isOpen","message","isPleaseWaitModalOpen","pleaseWaitMessage","renderPage","PageSection","PageSectionVariants","padding","default","isFilled","Toolbar","clearAllFilters","ToolbarContent","ToolbarGroup","ToolbarItem","Select","SelectVariant","onToggle","selections","map","option","SelectOption","InputGroup","placeholderText","TextInput","placeholder","name","type","onKeyDown","onChange","If","condition","Button","ButtonVariant","SearchIcon","ToolbarFilter","chips","deleteChip","categoryName","onRevoke","isUpdateAccess","onClose","onGrant","defaultRole","initializePageState","createLoaders","getRoleMappings","isLoading","newRoles","filter","rm","AVRO","PROTOBUF","JSON","OPENAPI","ASYNCAPI","GRAPHQL","KCONNECT","WSDL","XSD","XML"],"sourceRoot":""}