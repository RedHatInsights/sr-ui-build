{"version":3,"file":"167.bundle.f8da57704d7d11681605.js","mappings":"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","sources":["webpack://@apicurio/registry-ui/./src/app/components/common/ifAuth.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifFeature.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/header.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/components/schemaMapping/schemaMapping.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/basePage.tsx","webpack://@apicurio/registry-ui/./src/app/components/errorPage/accessErrorPage.tsx","webpack://@apicurio/registry-ui/./src/app/components/errorPage/rateLimitErrorPage.tsx","webpack://@apicurio/registry-ui/./src/app/pages/rules/rules.tsx","webpack://@apicurio/registry-ui/./src/app/pages/rules/rules.federated.tsx","webpack://@apicurio/registry-ui/./src/models/artifactMetaData.model.ts","webpack://@apicurio/registry-ui/./src/models/artifactTypes.model.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\nimport {AuthService} from \"../../../services/auth\";\n\n/**\n * Properties\n */\nexport interface IfAuthProps extends PureComponentProps {\n    enabled?: boolean;\n    isAuthenticated?: boolean;\n    isAdmin?: boolean;\n    isDeveloper?: boolean;\n    owner?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfAuthState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated authentication parameters are true.\n */\nexport class IfAuth extends PureComponent<IfAuthProps, IfAuthState> {\n\n    constructor(props: Readonly<IfAuthProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfAuthState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const auth: AuthService = Services.getAuthService();\n        let rval: boolean = true;\n        if (this.props.enabled !== undefined) {\n            rval = rval && (auth.isAuthenticationEnabled() === this.props.enabled);\n        }\n        if (this.props.isAuthenticated !== undefined) {\n            rval = rval && (auth.isAuthenticated() === this.props.isAuthenticated);\n        }\n        if (this.props.isAdmin !== undefined) {\n            rval = rval && (auth.isUserAdmin() === this.props.isAdmin);\n        }\n        if (this.props.isDeveloper !== undefined) {\n            rval = rval && (auth.isUserDeveloper(this.props.owner) === this.props.isDeveloper);\n        }\n        return rval;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\n\n/**\n * Properties\n */\nexport interface IfFeatureProps extends PureComponentProps {\n    feature: string;\n    is?: any;\n    isNot?: any;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfFeatureState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated feature matches the given criteria.  Use this if you want to show/hide\n * UI elements based on the configured application feature set.\n */\nexport class IfFeature extends PureComponent<IfFeatureProps, IfFeatureState> {\n\n    constructor(props: Readonly<IfFeatureProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfFeatureState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const features: any = Services.getConfigService().features();\n        const featureValue: any = features[this.props.feature];\n        if (this.props.is !== undefined) {\n            return featureValue === this.props.is;\n        } else if (this.props.isNot !== undefined) {\n            return featureValue !== this.props.isNot;\n        } else {\n            return featureValue !== undefined;\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./header.css\"\nimport {Brand, PageHeader, PageHeaderTools, PageHeaderToolsGroup, PageHeaderToolsItem} from '@patternfly/react-core';\nimport brandImg from \"./apicurio_logo_darkbkg_350px.png\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth} from \"../common/ifAuth\";\nimport {AvatarDropdown} from \"./avatarDropdown\";\n\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderProps extends PureComponentProps {\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderState extends PureComponentState {\n}\n\n\nexport class AppHeader extends PureComponent<AppHeaderProps, AppHeaderState> {\n\n    constructor(props: Readonly<AppHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let pageToolbar: React.ReactElement;\n        pageToolbar = (\n            <PageHeaderTools className=\"header-toolbar\">\n                <PageHeaderToolsGroup>\n                    <PageHeaderToolsItem id=\"avatar\">\n                        <IfAuth enabled={true}>\n                            <AvatarDropdown />\n                        </IfAuth>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n        );\n\n        return (<PageHeader\n            logo={<Brand onClick={this.navigateTo(this.linkTo(\"/artifacts\"))} src={brandImg} alt=\"Apicurio Registry\"/>}\n            showNavToggle={false}\n            headerTools={pageToolbar}\n        />);\n    }\n\n    protected initializeState(): AppHeaderState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {Tab, Tabs, TabTitleText} from '@patternfly/react-core';\nimport \"./pageheader.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth, IfFeature} from \"../common\";\nimport {Services} from \"../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderProps extends PureComponentProps {\n    tabKey: number;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifacts page.\n */\nexport class RootPageHeader extends PureComponent<RootPageHeaderProps, RootPageHeaderState> {\n\n    constructor(props: Readonly<RootPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let tabs: any[] = [\n            <Tab eventKey={0} title={<TabTitleText>Artifacts</TabTitleText>} />,\n            <Tab eventKey={1} title={<TabTitleText>Global rules</TabTitleText>} />\n        ];\n        if (Services.getConfigService().featureRoleManagement()) {\n            tabs.push(\n                <Tab eventKey={2} title={<TabTitleText>Access</TabTitleText>} />\n            );\n        }\n        if (Services.getConfigService().featureSettings()) {\n            tabs.push(\n                <Tab eventKey={3} title={<TabTitleText>Settings</TabTitleText>} />\n            );\n        }\n        return (\n            <div>\n                <IfAuth isAdmin={true}>\n                    <Tabs activeKey={this.props.tabKey} onSelect={this.handleTabClick} children={tabs} />\n                </IfAuth>\n            </div>\n        );\n    }\n\n    protected initializeState(): RootPageHeaderState {\n        return {};\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string): void => {\n        if (eventKey != this.props.tabKey) {\n            if (eventKey == 0) {\n                // navigate to artifacts\n                this.navigateTo(this.linkTo(\"/artifacts\"))();\n            }\n            if (eventKey == 1) {\n                // navigate to global rules\n                this.navigateTo(this.linkTo(\"/rules\"))();\n            }\n            if (eventKey == 2) {\n                // navigate to permissions page\n                this.navigateTo(this.linkTo(\"/roles\"))();\n            }\n            if (eventKey == 3) {\n                // navigate to settings page\n                this.navigateTo(this.linkTo(\"/settings\"))();\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {SchemaMapping, SchemaMappingProps} from \"./schemaMapping\";\nimport {FederatedComponentProps, FederatedUtils} from \"../../federated\";\n\nexport interface FederatedSchemaMappingProps extends SchemaMappingProps, FederatedComponentProps {\n}\n\nexport default class FederatedSchemaMapping extends SchemaMapping {\n\n    constructor(props: Readonly<FederatedSchemaMappingProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedSchemaMappingProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {ErrorPage, PageError, PureComponent, PureComponentProps, PureComponentState} from \"../components\";\nimport {Services} from \"../../services\";\nimport {Flex, FlexItem, PageSection, PageSectionVariants, Spinner} from \"@patternfly/react-core\";\nimport {AccessErrorPage} from \"../components/errorPage/accessErrorPage\";\nimport {RateLimitErrorPage} from \"../components/errorPage/rateLimitErrorPage\";\n\n// TODO this should be configurable via standard UI config settings\nconst MAX_RETRIES: number = 1;\n\nexport enum PageErrorType {\n    React, Server\n}\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PageProps extends PureComponentProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PageState extends PureComponentState {\n    pageLoadRetries?: number;\n    isLoading?: boolean;\n    isError?: boolean;\n    error?: PageError;\n}\n\n\n/**\n * The artifacts page.\n */\nexport abstract class PageComponent<P extends PageProps, S extends PageState> extends PureComponent<P, S> {\n\n    protected constructor(props: Readonly<P>) {\n        super(props);\n        setTimeout(() => {\n            this.loadPageData();\n        }, 10);\n    }\n\n    protected initializeState(): S {\n        return {\n            ...this.initializePageState(),\n            isLoading: true\n        };\n    }\n\n    protected abstract initializePageState(): S;\n\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        this.handleError(PageErrorType.React, error, errorInfo);\n    }\n\n    public render(): React.ReactElement {\n        if (this.isError()) {\n            if (this.is403Error()) {\n                return (\n                    <AccessErrorPage error={this.state.error}/>\n                );\n            } else if (this.is419Error()) {\n                return (\n                    <RateLimitErrorPage error={this.state.error}/>\n                );\n            } else {\n                return (\n                    <ErrorPage error={this.state.error}/>\n                );\n            }\n        } else if (this.isLoading()) {\n            return (\n                <React.Fragment>\n                    <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                        <Flex>\n                            <FlexItem><Spinner size=\"lg\"/></FlexItem>\n                            <FlexItem><span>Loading...</span></FlexItem>\n                        </Flex>\n                    </PageSection>\n                </React.Fragment>\n            );\n        } else {\n            return this.renderPage();\n        }\n    }\n\n    /**\n     * Renders the page content.  Subclasses should implement this instead of render() so that\n     * errors are handled/displayed properly.\n     */\n    protected abstract renderPage(): React.ReactElement;\n\n    protected postConstruct(): void {\n        // @ts-ignore\n        PureComponent.setHistory(this.props.history);\n        super.postConstruct();\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise | Promise[] | null {\n        return null;\n    }\n\n    protected handleServerError(error: any, errorMessage: string): void {\n        this.handleError(PageErrorType.Server, error, errorMessage);\n    }\n\n    protected getPathParam(paramName: string): string {\n        // @ts-ignore\n        const paramValue: string = this.props.match.params[paramName];\n        const paramValueDecoded: string = decodeURIComponent(paramValue);\n        Services.getLoggerService().debug(`[PageComponent] Path param \"${paramName}\" has value \"${paramValue}\" decoded as \"${paramValueDecoded}\".`);\n        return decodeURIComponent(paramValueDecoded);\n    }\n\n    protected isLoading(): boolean {\n        return this.state.isLoading ? true : false;\n    }\n\n    private loadPageData(): void {\n        // @ts-ignore\n        let loaders: Promise | Promise[] | null = this.createLoaders();\n\n        // If not loading anything, convert from null to empty array\n        if (loaders == null) {\n            loaders = [];\n        }\n\n        // Convert to array if not already\n        if (!Array.isArray(loaders)) {\n            loaders = [ loaders ];\n        }\n\n        // Always add the \"update current user\" loader\n        loaders = [\n            Services.getUsersService().updateCurrentUser(),\n            ...loaders\n        ];\n\n        if (loaders.length === 0) {\n            this.setSingleState(\"isLoading\", false);\n        } else {\n            this.setSingleState(\"isLoading\", true);\n            Promise.all(loaders).then(() => {\n                this.setSingleState(\"isLoading\", false);\n            }).catch(error => {\n                Services.getLoggerService().debug(\"[PageComponent] Page data load failed, retrying.\");\n                const retries: number = this.getRetries();\n                if (retries < MAX_RETRIES) {\n                    this.incrementRetries();\n                    setTimeout(() => {\n                        this.loadPageData();\n                    }, Math.pow(2, retries) * 100);\n                } else {\n                    this.handleServerError(error, \"Error loading page data.\");\n                }\n            });\n        }\n    }\n\n    private getRetries(): number {\n        return this.state.pageLoadRetries !== undefined ? this.state.pageLoadRetries as number : 0;\n    }\n\n    private incrementRetries(): void {\n        const retries: number = this.getRetries() + 1;\n        this.setSingleState(\"pageLoadRetries\", retries);\n    }\n\n    private isError(): boolean {\n        return this.state.isError ? true : false;\n    }\n\n    private is403Error(): boolean {\n        return this.state.error && this.state.error.error.status && (this.state.error.error.status == 403);\n    }\n\n    private is419Error(): boolean {\n        return this.state.error && this.state.error.error.status && (this.state.error.error.status == 419);\n    }\n\n    private handleError(errorType: PageErrorType, error: any, errorMessage: any): void {\n        Services.getLoggerService().error(\"[PageComponent] Handling an error of type: \", errorType);\n        Services.getLoggerService().error(\"[PageComponent] \", errorMessage);\n        Services.getLoggerService().error(\"[PageComponent] \", error);\n        this.setMultiState({\n            error: {\n                error,\n                errorMessage,\n                type: errorType\n            },\n            isError: true\n        });\n    }\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./errorPage.css\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from '@patternfly/react-core';\nimport {LockedIcon} from \"@patternfly/react-icons\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport {ErrorPage, ErrorPageProps} from \"./errorPage\";\n\n\nexport class AccessErrorPage extends ErrorPage {\n\n    constructor(props: Readonly<ErrorPageProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_error\" variant={PageSectionVariants.light}>\n                    <div className=\"centerizer\">\n                        <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={LockedIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">Access permissions needed</Title>\n                            <EmptyStateBody>\n                                To access this Service Registry instance, contact your organization administrators.\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-back\"\n                                        onClick={this.navigateBack}>Return to previous page</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                    </div>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected navigateBack = (): void => {\n        window.history.back();\n    };\n\n}\n","/**\n * @license\n * Copyright 2022 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./errorPage.css\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from '@patternfly/react-core';\nimport {ExclamationCircleIcon} from \"@patternfly/react-icons\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport {ErrorPage, ErrorPageProps} from \"./errorPage\";\n\n\nexport class RateLimitErrorPage extends ErrorPage {\n\n    constructor(props: Readonly<ErrorPageProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_error\" variant={PageSectionVariants.light}>\n                    <div className=\"centerizer\">\n                        <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={ExclamationCircleIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">Current usage is too high</Title>\n                            <EmptyStateBody>\n                                This Service Registry instance is throttled due to a high request rate. Ensure\n                                that existing applications are properly configured to cache the schemas.\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-back\"\n                                        onClick={this.navigateBack}>Return to previous page</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                    </div>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected navigateBack = (): void => {\n        window.history.back();\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./rules.css\";\nimport {Button, PageSection, PageSectionVariants, TextContent} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {RuleList} from \"../../components/ruleList\";\nimport {Rule} from \"../../../models\";\nimport {Services} from \"../../../services\";\nimport {RootPageHeader} from \"../../components\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageState extends PageState {\n    rules: Rule[] | null;\n}\n\n/**\n * The global rules page.\n */\nexport class RulesPage extends PageComponent<RulesPageProps, RulesPageState> {\n\n    constructor(props: Readonly<RulesPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_rules-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={1} />\n                </PageSection>\n                <PageSection className=\"ps_rules-description\" variant={PageSectionVariants.light}>\n                    <TextContent>\n                        Manage the list of global rules for this registry. Rules can be enabled, disabled, and individually configured.\n                    </TextContent>\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                    <React.Fragment>\n                        <RuleList rules={this.rules()}\n                                  onEnableRule={this.doEnableRule}\n                                  onDisableRule={this.doDisableRule}\n                                  onConfigureRule={this.doConfigureRule} />\n                    </React.Fragment>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): RulesPageState {\n        return {\n            rules: null\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().getRules().then( rules => {\n                this.setMultiState({\n                    isLoading: false,\n                    rules\n                });\n            });\n    }\n\n    private rules(): Rule[] {\n        if (this.state.rules) {\n            return this.state.rules;\n        } else {\n            return [];\n        }\n    }\n\n    private doEnableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Enabling global rule:\", ruleType);\n        let config: string = \"FULL\";\n        if (ruleType === \"COMPATIBILITY\") {\n            config = \"BACKWARD\";\n        }\n        Services.getAdminService().createRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error enabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", [...this.rules(), {config, type: ruleType}]);\n    };\n\n    private doDisableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Disabling global rule:\", ruleType);\n        Services.getAdminService().deleteRule(ruleType).catch(error => {\n            this.handleServerError(error, `Error disabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().filter(r => r.type !== ruleType));\n    };\n\n    private doConfigureRule = (ruleType: string, config: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Configuring global rule:\", ruleType, config);\n        Services.getAdminService().updateRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error configuring \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().map(r => {\n            if (r.type === ruleType) {\n                return {config, type: r.type};\n            } else {\n                return r;\n            }\n        }));\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./rules.css\";\nimport {RulesPage, RulesPageProps} from \"./rules\";\nimport {FederatedComponentProps, FederatedUtils} from \"../../federated\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface FederatedRulesPageProps extends RulesPageProps, FederatedComponentProps {\n}\n\n/**\n * The global rules page.\n */\nexport default class FederatedRulesPage extends RulesPage {\n\n    constructor(props: Readonly<FederatedRulesPageProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedComponentProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class ArtifactMetaData {\n\n    public groupId: string|null;\n    public id: string;\n    public name: string|null;\n    public description: string|null;\n    public labels: string[]|null;\n    public type: string;\n    public version: string;\n    public createdBy: string;\n    public createdOn: Date;\n    public modifiedBy: string;\n    public modifiedOn: Date;\n    public globalId: number;\n    public contentId: number|null;\n    public state: string;\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:interface-name\nexport class ArtifactTypes {\n\n    public static AVRO: string = \"AVRO\";\n    public static PROTOBUF: string = \"PROTOBUF\";\n    public static JSON: string = \"JSON\";\n    public static OPENAPI: string = \"OPENAPI\";\n    public static ASYNCAPI: string = \"ASYNCAPI\";\n    public static GRAPHQL: string = \"GRAPHQL\";\n    public static KCONNECT: string = \"KCONNECT\";\n    public static WSDL: string = \"WSDL\";\n    public static XSD: string = \"XSD\";\n    public static XML: string = \"XML\";\n\n}\n"],"names":["props","render","this","accept","children","initializeState","auth","Services","rval","undefined","enabled","isAuthenticationEnabled","isAuthenticated","isAdmin","isUserAdmin","isDeveloper","isUserDeveloper","owner","featureValue","features","feature","is","isNot","pageToolbar","PageHeaderTools","className","PageHeaderToolsGroup","PageHeaderToolsItem","id","PageHeader","logo","Brand","onClick","navigateTo","linkTo","src","alt","showNavToggle","headerTools","handleTabClick","event","eventKey","tabKey","tabs","Tab","title","TabTitleText","featureRoleManagement","push","featureSettings","Tabs","activeKey","onSelect","postConstruct","PageErrorType","navigateBack","window","history","back","PageSection","variant","PageSectionVariants","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","LockedIcon","Title","headingLevel","size","EmptyStateBody","EmptyStateSecondaryActions","Button","ExclamationCircleIcon","setTimeout","loadPageData","initializePageState","isLoading","componentDidCatch","error","errorInfo","handleError","React","isError","is403Error","AccessErrorPage","state","is419Error","RateLimitErrorPage","isFilled","Flex","FlexItem","Spinner","renderPage","createLoaders","handleServerError","errorMessage","Server","getPathParam","paramName","paramValue","match","params","paramValueDecoded","decodeURIComponent","debug","loaders","Array","isArray","updateCurrentUser","length","setSingleState","Promise","all","then","catch","retries","getRetries","incrementRetries","Math","pow","pageLoadRetries","status","errorType","setMultiState","type","doEnableRule","ruleType","config","createRule","rules","doDisableRule","deleteRule","filter","r","doConfigureRule","updateRule","map","padding","default","TextContent","onEnableRule","onDisableRule","onConfigureRule","getRules","RulesPage","AVRO","PROTOBUF","JSON","OPENAPI","ASYNCAPI","GRAPHQL","KCONNECT","WSDL","XSD","XML"],"sourceRoot":""}