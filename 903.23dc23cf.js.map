{"version":3,"file":"903.23dc23cf.js","mappings":"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","sources":["webpack://@apicurio/registry-ui/./src/app/components/common/ifAuth.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifFeature.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifNotEmpty.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/header.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/components/schemaMapping/schemaMapping.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/basePage.tsx","webpack://@apicurio/registry-ui/./src/app/components/errorPage/accessErrorPage.tsx","webpack://@apicurio/registry-ui/./src/app/components/errorPage/rateLimitErrorPage.tsx","webpack://@apicurio/registry-ui/./src/app/pages/rules/rules.tsx","webpack://@apicurio/registry-ui/./src/app/pages/rules/rules.federated.tsx","webpack://@apicurio/registry-ui/./src/models/artifactMetaData.model.ts","webpack://@apicurio/registry-ui/./src/models/artifactTypes.model.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\nimport {AuthService} from \"../../../services/auth\";\n\n/**\n * Properties\n */\nexport interface IfAuthProps extends PureComponentProps {\n    enabled?: boolean;\n    isAuthenticated?: boolean;\n    isAdmin?: boolean;\n    isDeveloper?: boolean;\n    owner?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfAuthState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated authentication parameters are true.\n */\nexport class IfAuth extends PureComponent<IfAuthProps, IfAuthState> {\n\n    constructor(props: Readonly<IfAuthProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfAuthState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const auth: AuthService = Services.getAuthService();\n        let rval: boolean = true;\n        if (this.props.enabled !== undefined) {\n            rval = rval && (auth.isAuthenticationEnabled() === this.props.enabled);\n        }\n        if (this.props.isAuthenticated !== undefined) {\n            rval = rval && (auth.isAuthenticated() === this.props.isAuthenticated);\n        }\n        if (this.props.isAdmin !== undefined) {\n            rval = rval && (auth.isUserAdmin() === this.props.isAdmin);\n        }\n        if (this.props.isDeveloper !== undefined) {\n            rval = rval && (auth.isUserDeveloper(this.props.owner) === this.props.isDeveloper);\n        }\n        return rval;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {Services} from \"../../../services\";\n\n/**\n * Properties\n */\nexport interface IfFeatureProps extends PureComponentProps {\n    feature: string;\n    is?: any;\n    isNot?: any;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfFeatureState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated feature matches the given criteria.  Use this if you want to show/hide\n * UI elements based on the configured application feature set.\n */\nexport class IfFeature extends PureComponent<IfFeatureProps, IfFeatureState> {\n\n    constructor(props: Readonly<IfFeatureProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfFeatureState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const features: any = Services.getConfigService().features();\n        const featureValue: any = features[this.props.feature];\n        if (this.props.is !== undefined) {\n            return featureValue === this.props.is;\n        } else if (this.props.isNot !== undefined) {\n            return featureValue !== this.props.isNot;\n        } else {\n            return featureValue !== undefined;\n        }\n    }\n\n}\n","import React, {FunctionComponent} from \"react\";\nimport {Button, EmptyState, EmptyStateBody, EmptyStateVariant, Title} from \"@patternfly/react-core\";\n\n/**\n * Properties\n */\nexport interface IfNotEmptyProps {\n    collection?: any[] | undefined;\n    emptyState?: React.ReactNode;\n    emptyStateTitle?: string;\n    emptyStateMessage?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * provided collection is not empty.  If the provided collection is empty, then\n * an empty state control is displayed instead.\n */\nexport const IfNotEmpty: FunctionComponent<IfNotEmptyProps> = ({collection, emptyState, emptyStateTitle, emptyStateMessage, children}: IfNotEmptyProps) => {\n    const isEmpty = () => {\n        return !collection || collection.length === 0;\n    };\n\n    const empty: React.ReactNode = emptyState || (\n        <EmptyState variant={EmptyStateVariant.xs}>\n            <Title headingLevel=\"h4\" size=\"md\">{emptyStateTitle || \"None found\"}</Title>\n            <EmptyStateBody>{emptyStateMessage || \"No items found.\"}</EmptyStateBody>\n        </EmptyState>\n    );\n\n    return isEmpty() ?\n        <React.Fragment children={empty}/> :\n        <React.Fragment children={children} />\n};\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./header.css\"\nimport {Brand, PageHeader, PageHeaderTools, PageHeaderToolsGroup, PageHeaderToolsItem} from '@patternfly/react-core';\nimport brandImg from \"./apicurio_logo_darkbkg_350px.png\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth} from \"../common/ifAuth\";\nimport {AvatarDropdown} from \"./avatarDropdown\";\n\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderProps extends PureComponentProps {\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderState extends PureComponentState {\n}\n\n\nexport class AppHeader extends PureComponent<AppHeaderProps, AppHeaderState> {\n\n    constructor(props: Readonly<AppHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let pageToolbar: React.ReactElement;\n        pageToolbar = (\n            <PageHeaderTools className=\"header-toolbar\">\n                <PageHeaderToolsGroup>\n                    <PageHeaderToolsItem id=\"avatar\">\n                        <IfAuth enabled={true}>\n                            <AvatarDropdown />\n                        </IfAuth>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n        );\n\n        return (<PageHeader\n            logo={<Brand onClick={this.navigateTo(this.linkTo(\"/artifacts\"))} src={brandImg} alt=\"Apicurio Registry\"/>}\n            showNavToggle={false}\n            headerTools={pageToolbar}\n        />);\n    }\n\n    protected initializeState(): AppHeaderState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {Tab, Tabs, TabTitleText} from '@patternfly/react-core';\nimport \"./pageheader.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\nimport {IfAuth, IfFeature} from \"../common\";\nimport {Services} from \"../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderProps extends PureComponentProps {\n    tabKey: number;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifacts page.\n */\nexport class RootPageHeader extends PureComponent<RootPageHeaderProps, RootPageHeaderState> {\n\n    constructor(props: Readonly<RootPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let tabs: any[] = [\n            <Tab eventKey={0} title={<TabTitleText>Artifacts</TabTitleText>} />,\n            <Tab eventKey={1} title={<TabTitleText>Global rules</TabTitleText>} />\n        ];\n        if (Services.getConfigService().featureRoleManagement()) {\n            tabs.push(\n                <Tab eventKey={2} title={<TabTitleText>Access</TabTitleText>} />\n            );\n        }\n        if (Services.getConfigService().featureSettings()) {\n            tabs.push(\n                <Tab eventKey={3} title={<TabTitleText>Settings</TabTitleText>} />\n            );\n        }\n        return (\n            <div>\n                <IfAuth isAdmin={true}>\n                    <Tabs activeKey={this.props.tabKey} onSelect={this.handleTabClick} children={tabs} />\n                </IfAuth>\n            </div>\n        );\n    }\n\n    protected initializeState(): RootPageHeaderState {\n        return {};\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string): void => {\n        if (eventKey != this.props.tabKey) {\n            if (eventKey == 0) {\n                // navigate to artifacts\n                this.navigateTo(this.linkTo(\"/artifacts\"))();\n            }\n            if (eventKey == 1) {\n                // navigate to global rules\n                this.navigateTo(this.linkTo(\"/rules\"))();\n            }\n            if (eventKey == 2) {\n                // navigate to permissions page\n                this.navigateTo(this.linkTo(\"/roles\"))();\n            }\n            if (eventKey == 3) {\n                // navigate to settings page\n                this.navigateTo(this.linkTo(\"/settings\"))();\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {SchemaMapping, SchemaMappingProps} from \"./schemaMapping\";\nimport {FederatedComponentProps, FederatedUtils} from \"../../federated\";\n\nexport interface FederatedSchemaMappingProps extends SchemaMappingProps, FederatedComponentProps {\n}\n\nexport default class FederatedSchemaMapping extends SchemaMapping {\n\n    constructor(props: Readonly<FederatedSchemaMappingProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedSchemaMappingProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport {ErrorPage, PageError, PureComponent, PureComponentProps, PureComponentState} from \"../components\";\nimport {Services} from \"../../services\";\nimport {Flex, FlexItem, PageSection, PageSectionVariants, Spinner} from \"@patternfly/react-core\";\nimport {AccessErrorPage} from \"../components/errorPage/accessErrorPage\";\nimport {RateLimitErrorPage} from \"../components/errorPage/rateLimitErrorPage\";\n\n// TODO this should be configurable via standard UI config settings\nconst MAX_RETRIES: number = 1;\n\nexport enum PageErrorType {\n    React, Server\n}\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PageProps extends PureComponentProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PageState extends PureComponentState {\n    pageLoadRetries?: number;\n    isLoading?: boolean;\n    isError?: boolean;\n    error?: PageError;\n}\n\n\n/**\n * The artifacts page.\n */\nexport abstract class PageComponent<P extends PageProps, S extends PageState> extends PureComponent<P, S> {\n\n    protected constructor(props: Readonly<P>) {\n        super(props);\n        setTimeout(() => {\n            this.loadPageData();\n        }, 10);\n    }\n\n    protected initializeState(): S {\n        return {\n            ...this.initializePageState(),\n            isLoading: true\n        };\n    }\n\n    protected abstract initializePageState(): S;\n\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        this.handleError(PageErrorType.React, error, errorInfo);\n    }\n\n    public render(): React.ReactElement {\n        if (this.isError()) {\n            if (this.is403Error()) {\n                return (\n                    <AccessErrorPage error={this.state.error}/>\n                );\n            } else if (this.is419Error()) {\n                return (\n                    <RateLimitErrorPage error={this.state.error}/>\n                );\n            } else {\n                return (\n                    <ErrorPage error={this.state.error}/>\n                );\n            }\n        } else if (this.isLoading()) {\n            return (\n                <React.Fragment>\n                    <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                        <Flex>\n                            <FlexItem><Spinner size=\"lg\"/></FlexItem>\n                            <FlexItem><span>Loading...</span></FlexItem>\n                        </Flex>\n                    </PageSection>\n                </React.Fragment>\n            );\n        } else {\n            return this.renderPage();\n        }\n    }\n\n    /**\n     * Renders the page content.  Subclasses should implement this instead of render() so that\n     * errors are handled/displayed properly.\n     */\n    protected abstract renderPage(): React.ReactElement;\n\n    protected postConstruct(): void {\n        // @ts-ignore\n        PureComponent.setHistory(this.props.history);\n        super.postConstruct();\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise | Promise[] | null {\n        return null;\n    }\n\n    protected handleServerError(error: any, errorMessage: string): void {\n        this.handleError(PageErrorType.Server, error, errorMessage);\n    }\n\n    protected getPathParam(paramName: string): string {\n        // @ts-ignore\n        const paramValue: string = this.props.match.params[paramName];\n        const paramValueDecoded: string = decodeURIComponent(paramValue);\n        return paramValueDecoded;\n    }\n\n    protected isLoading(): boolean {\n        return this.state.isLoading ? true : false;\n    }\n\n    private loadPageData(): void {\n        // @ts-ignore\n        let loaders: Promise | Promise[] | null = this.createLoaders();\n\n        // If not loading anything, convert from null to empty array\n        if (loaders == null) {\n            loaders = [];\n        }\n\n        // Convert to array if not already\n        if (!Array.isArray(loaders)) {\n            loaders = [ loaders ];\n        }\n\n        // Always add the \"update current user\" loader\n        loaders = [\n            Services.getUsersService().updateCurrentUser(),\n            ...loaders\n        ];\n\n        if (loaders.length === 0) {\n            this.setSingleState(\"isLoading\", false);\n        } else {\n            this.setSingleState(\"isLoading\", true);\n            Promise.all(loaders).then(() => {\n                this.setSingleState(\"isLoading\", false);\n            }).catch(error => {\n                Services.getLoggerService().debug(\"[PageComponent] Page data load failed, retrying.\");\n                const retries: number = this.getRetries();\n                if (retries < MAX_RETRIES) {\n                    this.incrementRetries();\n                    setTimeout(() => {\n                        this.loadPageData();\n                    }, Math.pow(2, retries) * 100);\n                } else {\n                    this.handleServerError(error, \"Error loading page data.\");\n                }\n            });\n        }\n    }\n\n    private getRetries(): number {\n        return this.state.pageLoadRetries !== undefined ? this.state.pageLoadRetries as number : 0;\n    }\n\n    private incrementRetries(): void {\n        const retries: number = this.getRetries() + 1;\n        this.setSingleState(\"pageLoadRetries\", retries);\n    }\n\n    private isError(): boolean {\n        return this.state.isError ? true : false;\n    }\n\n    private is403Error(): boolean {\n        return this.state.error && this.state.error.error.status && (this.state.error.error.status == 403);\n    }\n\n    private is419Error(): boolean {\n        return this.state.error && this.state.error.error.status && (this.state.error.error.status == 419);\n    }\n\n    private handleError(errorType: PageErrorType, error: any, errorMessage: any): void {\n        Services.getLoggerService().error(\"[PageComponent] Handling an error of type: \", errorType);\n        Services.getLoggerService().error(\"[PageComponent] \", errorMessage);\n        Services.getLoggerService().error(\"[PageComponent] \", error);\n        this.setMultiState({\n            error: {\n                error,\n                errorMessage,\n                type: errorType\n            },\n            isError: true\n        });\n    }\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./errorPage.css\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from '@patternfly/react-core';\nimport {LockedIcon} from \"@patternfly/react-icons\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport {ErrorPage, ErrorPageProps} from \"./errorPage\";\n\n\nexport class AccessErrorPage extends ErrorPage {\n\n    constructor(props: Readonly<ErrorPageProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_error\" variant={PageSectionVariants.light}>\n                    <div className=\"centerizer\">\n                        <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={LockedIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">Access permissions needed</Title>\n                            <EmptyStateBody>\n                                To access this Service Registry instance, contact your organization administrators.\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-back\"\n                                        onClick={this.navigateBack}>Return to previous page</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                    </div>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected navigateBack = (): void => {\n        window.history.back();\n    };\n\n}\n","/**\n * @license\n * Copyright 2022 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport \"./errorPage.css\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from '@patternfly/react-core';\nimport {ExclamationCircleIcon} from \"@patternfly/react-icons\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport {ErrorPage, ErrorPageProps} from \"./errorPage\";\n\n\nexport class RateLimitErrorPage extends ErrorPage {\n\n    constructor(props: Readonly<ErrorPageProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_error\" variant={PageSectionVariants.light}>\n                    <div className=\"centerizer\">\n                        <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={ExclamationCircleIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">Current usage is too high</Title>\n                            <EmptyStateBody>\n                                This Service Registry instance is throttled due to a high request rate. Ensure\n                                that existing applications are properly configured to cache the schemas.\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-back\"\n                                        onClick={this.navigateBack}>Return to previous page</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                    </div>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected navigateBack = (): void => {\n        window.history.back();\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./rules.css\";\nimport {Button, PageSection, PageSectionVariants, TextContent} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {RuleList} from \"../../components/ruleList\";\nimport {Rule} from \"../../../models\";\nimport {Services} from \"../../../services\";\nimport {RootPageHeader} from \"../../components\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageProps extends PageProps {\n\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RulesPageState extends PageState {\n    rules: Rule[] | null;\n}\n\n/**\n * The global rules page.\n */\nexport class RulesPage extends PageComponent<RulesPageProps, RulesPageState> {\n\n    constructor(props: Readonly<RulesPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_rules-header\" variant={PageSectionVariants.light} padding={{ default : \"noPadding\" }}>\n                    <RootPageHeader tabKey={1} />\n                </PageSection>\n                <PageSection className=\"ps_rules-description\" variant={PageSectionVariants.light}>\n                    <TextContent>\n                        Manage the list of global rules for this registry. Rules can be enabled, disabled, and individually configured.\n                    </TextContent>\n                </PageSection>\n                <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                    <React.Fragment>\n                        <RuleList rules={this.rules()}\n                                  onEnableRule={this.doEnableRule}\n                                  onDisableRule={this.doDisableRule}\n                                  onConfigureRule={this.doConfigureRule} />\n                    </React.Fragment>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): RulesPageState {\n        return {\n            rules: null\n        };\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise {\n        return Services.getAdminService().getRules().then( rules => {\n                this.setMultiState({\n                    isLoading: false,\n                    rules\n                });\n            });\n    }\n\n    private rules(): Rule[] {\n        if (this.state.rules) {\n            return this.state.rules;\n        } else {\n            return [];\n        }\n    }\n\n    private doEnableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Enabling global rule:\", ruleType);\n        let config: string = \"FULL\";\n        if (ruleType === \"COMPATIBILITY\") {\n            config = \"BACKWARD\";\n        }\n        Services.getAdminService().createRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error enabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", [...this.rules(), {config, type: ruleType}]);\n    };\n\n    private doDisableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Disabling global rule:\", ruleType);\n        Services.getAdminService().deleteRule(ruleType).catch(error => {\n            this.handleServerError(error, `Error disabling \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().filter(r => r.type !== ruleType));\n    };\n\n    private doConfigureRule = (ruleType: string, config: string): void => {\n        Services.getLoggerService().debug(\"[RulesPage] Configuring global rule:\", ruleType, config);\n        Services.getAdminService().updateRule(ruleType, config).catch(error => {\n            this.handleServerError(error, `Error configuring \"${ ruleType }\" global rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().map(r => {\n            if (r.type === ruleType) {\n                return {config, type: r.type};\n            } else {\n                return r;\n            }\n        }));\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./rules.css\";\nimport {RulesPage, RulesPageProps} from \"./rules\";\nimport {FederatedComponentProps, FederatedUtils} from \"../../federated\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface FederatedRulesPageProps extends RulesPageProps, FederatedComponentProps {\n}\n\n/**\n * The global rules page.\n */\nexport default class FederatedRulesPage extends RulesPage {\n\n    constructor(props: Readonly<FederatedRulesPageProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedComponentProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class ArtifactMetaData {\n\n    public groupId: string|null;\n    public id: string;\n    public name: string|null;\n    public description: string|null;\n    public labels: string[]|null;\n    public properties: { [key: string]: string };\n    public type: string;\n    public version: string;\n    public createdBy: string;\n    public createdOn: Date;\n    public modifiedBy: string;\n    public modifiedOn: Date;\n    public globalId: number;\n    public contentId: number|null;\n    public state: string;\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:interface-name\nexport class ArtifactTypes {\n\n    public static AVRO: string = \"AVRO\";\n    public static PROTOBUF: string = \"PROTOBUF\";\n    public static JSON: string = \"JSON\";\n    public static OPENAPI: string = \"OPENAPI\";\n    public static ASYNCAPI: string = \"ASYNCAPI\";\n    public static GRAPHQL: string = \"GRAPHQL\";\n    public static KCONNECT: string = \"KCONNECT\";\n    public static WSDL: string = \"WSDL\";\n    public static XSD: string = \"XSD\";\n    public static XML: string = \"XML\";\n\n}\n"],"names":["props","render","this","accept","children","initializeState","auth","rval","undefined","enabled","isAuthenticationEnabled","isAuthenticated","isAdmin","isUserAdmin","isDeveloper","isUserDeveloper","owner","featureValue","features","feature","is","isNot","IfNotEmpty","collection","emptyState","emptyStateTitle","emptyStateMessage","empty","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","length","pageToolbar","PageHeaderTools","className","PageHeaderToolsGroup","PageHeaderToolsItem","id","PageHeader","logo","Brand","onClick","navigateTo","linkTo","src","alt","showNavToggle","headerTools","handleTabClick","event","eventKey","tabKey","tabs","Tab","title","TabTitleText","featureRoleManagement","push","featureSettings","Tabs","activeKey","onSelect","postConstruct","PageErrorType","navigateBack","window","history","back","PageSection","PageSectionVariants","EmptyStateIcon","icon","LockedIcon","EmptyStateSecondaryActions","Button","ExclamationCircleIcon","setTimeout","loadPageData","initializePageState","isLoading","componentDidCatch","error","errorInfo","handleError","React","isError","is403Error","AccessErrorPage","state","is419Error","RateLimitErrorPage","isFilled","Flex","FlexItem","Spinner","renderPage","createLoaders","handleServerError","errorMessage","Server","getPathParam","paramName","paramValue","match","params","decodeURIComponent","loaders","Array","isArray","updateCurrentUser","setSingleState","Promise","all","then","catch","debug","retries","getRetries","incrementRetries","Math","pow","pageLoadRetries","status","errorType","setMultiState","type","doEnableRule","ruleType","config","createRule","rules","doDisableRule","deleteRule","filter","r","doConfigureRule","updateRule","map","padding","default","TextContent","onEnableRule","onDisableRule","onConfigureRule","getRules","RulesPage","AVRO","PROTOBUF","JSON","OPENAPI","ASYNCAPI","GRAPHQL","KCONNECT","WSDL","XSD","XML"],"sourceRoot":""}