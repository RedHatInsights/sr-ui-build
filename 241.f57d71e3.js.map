{"version":3,"file":"241.f57d71e3.js","mappings":"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","sources":["webpack://@apicurio/registry-ui/./src/app/components/common/ifAuth.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifFeature.tsx","webpack://@apicurio/registry-ui/./src/app/components/common/ifNotEmpty.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/header.tsx","webpack://@apicurio/registry-ui/./src/app/components/header/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/components/schemaMapping/schemaMapping.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifact/artifact.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifact/artifact.federated.tsx","webpack://@apicurio/registry-ui/./src/app/pages/basePage.tsx","webpack://@apicurio/registry-ui/./src/app/components/errorPage/accessErrorPage.tsx","webpack://@apicurio/registry-ui/./src/app/components/errorPage/rateLimitErrorPage.tsx","webpack://@apicurio/registry-ui/./src/models/artifactMetaData.model.ts","webpack://@apicurio/registry-ui/./src/models/artifactTypes.model.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { Services } from \"../../../services\";\nimport { AuthService } from \"../../../services/auth\";\n\n/**\n * Properties\n */\nexport interface IfAuthProps extends PureComponentProps {\n    enabled?: boolean;\n    isAuthenticated?: boolean;\n    isAdmin?: boolean;\n    isDeveloper?: boolean;\n    isOwner?: boolean;\n    isAdminOrOwner?: boolean;\n    owner?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfAuthState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated authentication parameters are true.\n */\nexport class IfAuth extends PureComponent<IfAuthProps, IfAuthState> {\n\n    constructor(props: Readonly<IfAuthProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfAuthState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const auth: AuthService = Services.getAuthService();\n        let rval: boolean = true;\n        if (this.props.enabled !== undefined) {\n            rval = rval && (auth.isAuthenticationEnabled() === this.props.enabled);\n        }\n        if (this.props.isAuthenticated !== undefined) {\n            rval = rval && (auth.isAuthenticated() === this.props.isAuthenticated);\n        }\n        if (this.props.isAdmin !== undefined) {\n            rval = rval && (auth.isUserAdmin() === this.props.isAdmin);\n        }\n        if (this.props.isDeveloper !== undefined) {\n            rval = rval && (auth.isUserDeveloper(this.props.owner) === this.props.isDeveloper);\n        }\n        if (this.props.isOwner !== undefined && this.props.owner) {\n            if (this.props.isOwner) {\n                rval = rval && (auth.isUserId(this.props.owner));\n            } else {\n                rval = rval && (!auth.isUserId(this.props.owner));\n            }\n        }\n        if (this.props.isAdminOrOwner === true && this.props.owner) {\n            rval = rval && (\n                auth.isUserAdmin() === true ||\n                auth.isUserId(this.props.owner)\n            );\n        }\n        return rval;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { Services } from \"../../../services\";\n\n/**\n * Properties\n */\nexport interface IfFeatureProps extends PureComponentProps {\n    feature: string;\n    is?: any;\n    isNot?: any;\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfFeatureState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated feature matches the given criteria.  Use this if you want to show/hide\n * UI elements based on the configured application feature set.\n */\nexport class IfFeature extends PureComponent<IfFeatureProps, IfFeatureState> {\n\n    constructor(props: Readonly<IfFeatureProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfFeatureState {\n        return {};\n    }\n\n    private accept(): boolean {\n        const features: any = Services.getConfigService().features();\n        const featureValue: any = features[this.props.feature];\n        if (this.props.is !== undefined) {\n            return featureValue === this.props.is;\n        } else if (this.props.isNot !== undefined) {\n            return featureValue !== this.props.isNot;\n        } else {\n            return featureValue !== undefined;\n        }\n    }\n\n}\n","import React, { FunctionComponent } from \"react\";\nimport { EmptyState, EmptyStateBody, EmptyStateVariant, Title } from \"@patternfly/react-core\";\n\n/**\n * Properties\n */\nexport interface IfNotEmptyProps {\n    collection?: any[] | undefined;\n    emptyState?: React.ReactNode;\n    emptyStateTitle?: string;\n    emptyStateMessage?: string;\n    children?: React.ReactNode;\n}\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * provided collection is not empty.  If the provided collection is empty, then\n * an empty state control is displayed instead.\n */\nexport const IfNotEmpty: FunctionComponent<IfNotEmptyProps> = ({collection, emptyState, emptyStateTitle, emptyStateMessage, children}: IfNotEmptyProps) => {\n    const isEmpty = () => {\n        return !collection || collection.length === 0;\n    };\n\n    const empty: React.ReactNode = emptyState || (\n        <EmptyState variant={EmptyStateVariant.xs}>\n            <Title headingLevel=\"h4\" size=\"md\">{emptyStateTitle || \"None found\"}</Title>\n            <EmptyStateBody>{emptyStateMessage || \"No items found.\"}</EmptyStateBody>\n        </EmptyState>\n    );\n\n    return isEmpty() ?\n        <React.Fragment children={empty}/> :\n        <React.Fragment children={children} />\n};\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./header.css\";\nimport { Brand, PageHeader, PageHeaderTools, PageHeaderToolsGroup, PageHeaderToolsItem } from \"@patternfly/react-core\";\nimport brandImg from \"./apicurio_logo_darkbkg_350px.png\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { IfAuth } from \"../common/ifAuth\";\nimport { AvatarDropdown } from \"./avatarDropdown\";\n\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderProps extends PureComponentProps {\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppHeaderState extends PureComponentState {\n}\n\n\nexport class AppHeader extends PureComponent<AppHeaderProps, AppHeaderState> {\n\n    constructor(props: Readonly<AppHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        let pageToolbar: React.ReactElement;\n        pageToolbar = (\n            <PageHeaderTools className=\"header-toolbar\">\n                <PageHeaderToolsGroup>\n                    <PageHeaderToolsItem id=\"avatar\">\n                        <IfAuth enabled={true}>\n                            <AvatarDropdown />\n                        </IfAuth>\n                    </PageHeaderToolsItem>\n                </PageHeaderToolsGroup>\n            </PageHeaderTools>\n        );\n\n        return (<PageHeader\n            logo={<Brand onClick={this.navigateTo(this.linkTo(\"/artifacts\"))} src={brandImg} alt=\"Apicurio Registry\"/>}\n            showNavToggle={false}\n            headerTools={pageToolbar}\n        />);\n    }\n\n    protected initializeState(): AppHeaderState {\n        return {};\n    }\n\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport { Tab, Tabs, TabTitleText } from \"@patternfly/react-core\";\nimport \"./pageheader.css\";\nimport { PureComponent, PureComponentProps, PureComponentState } from \"../baseComponent\";\nimport { IfAuth } from \"../common\";\nimport { Services } from \"../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderProps extends PureComponentProps {\n    tabKey: number;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface RootPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifacts page.\n */\nexport class RootPageHeader extends PureComponent<RootPageHeaderProps, RootPageHeaderState> {\n\n    constructor(props: Readonly<RootPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        const tabs: any[] = [\n            <Tab key={0} eventKey={0} title={<TabTitleText>Artifacts</TabTitleText>} />,\n            <Tab key={1} eventKey={1} title={<TabTitleText>Global rules</TabTitleText>} />\n        ];\n        if (Services.getConfigService().featureRoleManagement()) {\n            tabs.push(\n                <Tab key={2} eventKey={2} title={<TabTitleText>Access</TabTitleText>} />\n            );\n        }\n        if (Services.getConfigService().featureSettings()) {\n            tabs.push(\n                <Tab key={3} eventKey={3} title={<TabTitleText>Settings</TabTitleText>} />\n            );\n        }\n        return (\n            <div>\n                <IfAuth isAdmin={true}>\n                    <Tabs activeKey={this.props.tabKey} onSelect={this.handleTabClick} children={tabs} />\n                </IfAuth>\n            </div>\n        );\n    }\n\n    protected initializeState(): RootPageHeaderState {\n        return {};\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLElement, MouseEvent>, eventKey: number | string): void => {\n        if (eventKey !== this.props.tabKey) {\n            if (eventKey === 0) {\n                // navigate to artifacts\n                this.navigateTo(this.linkTo(\"/artifacts\"))();\n            }\n            if (eventKey === 1) {\n                // navigate to global rules\n                this.navigateTo(this.linkTo(\"/rules\"))();\n            }\n            if (eventKey === 2) {\n                // navigate to permissions page\n                this.navigateTo(this.linkTo(\"/roles\"))();\n            }\n            if (eventKey === 3) {\n                // navigate to settings page\n                this.navigateTo(this.linkTo(\"/settings\"))();\n            }\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SchemaMapping, SchemaMappingProps } from \"./schemaMapping\";\nimport { FederatedComponentProps, FederatedUtils } from \"../../federated\";\n\nexport interface FederatedSchemaMappingProps extends SchemaMappingProps, FederatedComponentProps {\n}\n\nexport default class FederatedSchemaMapping extends SchemaMapping {\n\n    constructor(props: Readonly<FederatedSchemaMappingProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedSchemaMappingProps);\n        super.postConstruct();\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { PageComponent, PageProps, PageState } from \"../basePage\";\nimport { Services } from \"../../../services\";\nimport { Redirect } from \"react-router-dom\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactRedirectPageProps extends PageProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactRedirectPageState extends PageState {\n}\n\n/**\n * The artifact details redirect page.\n */\nexport class ArtifactRedirectPage extends PageComponent<ArtifactRedirectPageProps, ArtifactRedirectPageState> {\n\n    constructor(props: Readonly<ArtifactRedirectPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        const groupId: any = this.groupIdParam();\n        const artifactId: any = this.artifactIdParam();\n        const redirect: string = this.linkTo(`/artifacts/${ encodeURIComponent(groupId) }/${ encodeURIComponent(artifactId) }/versions/latest`);\n        Services.getLoggerService().info(\"[ArtifactRedirectPage] Redirecting to: %s\", redirect);\n        return (\n            <Redirect to={redirect}  />\n        );\n    }\n\n    protected groupIdParam(): string {\n        return this.getPathParam(\"groupId\");\n    }\n\n    protected artifactIdParam(): string {\n        return this.getPathParam(\"artifactId\");\n    }\n\n    protected initializePageState(): ArtifactRedirectPageState {\n        return {};\n    }\n}\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ArtifactRedirectPage, ArtifactRedirectPageProps } from \"./artifact\";\nimport { FederatedComponentProps, FederatedUtils } from \"../../federated\";\n\nexport interface FederatedArtifactRedirectPageProps extends ArtifactRedirectPageProps, FederatedComponentProps {\n    groupId: string;\n    artifactId: string;\n}\n\nexport default class FederatedArtifactRedirectPage extends ArtifactRedirectPage {\n\n    constructor(props: Readonly<FederatedArtifactRedirectPageProps>) {\n        super(props);\n    }\n\n    protected postConstruct(): void {\n        FederatedUtils.updateConfiguration(this.props as FederatedComponentProps);\n        super.postConstruct();\n    }\n\n    protected groupIdParam(): string {\n        return (this.props as FederatedArtifactRedirectPageProps).groupId;\n    }\n\n    protected artifactIdParam(): string {\n        return (this.props as FederatedArtifactRedirectPageProps).artifactId;\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport { ErrorPage, PageError, PureComponent, PureComponentProps, PureComponentState } from \"../components\";\nimport { Services } from \"../../services\";\nimport { Flex, FlexItem, PageSection, PageSectionVariants, Spinner } from \"@patternfly/react-core\";\nimport { AccessErrorPage } from \"../components/errorPage/accessErrorPage\";\nimport { RateLimitErrorPage } from \"../components/errorPage/rateLimitErrorPage\";\n\n// TODO this should be configurable via standard UI config settings\nconst MAX_RETRIES: number = 1;\n\nexport enum PageErrorType {\n    React, Server\n}\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PageProps extends PureComponentProps {\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface PageState extends PureComponentState {\n    pageLoadRetries?: number;\n    isLoading?: boolean;\n    isError?: boolean;\n    error?: PageError;\n}\n\n\n/**\n * The artifacts page.\n */\nexport abstract class PageComponent<P extends PageProps, S extends PageState> extends PureComponent<P, S> {\n\n    protected constructor(props: Readonly<P>) {\n        super(props);\n        setTimeout(() => {\n            this.loadPageData();\n        }, 10);\n    }\n\n    protected initializeState(): S {\n        return {\n            ...this.initializePageState(),\n            isLoading: true\n        };\n    }\n\n    protected abstract initializePageState(): S;\n\n    public componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n        this.handleError(PageErrorType.React, error, errorInfo);\n    }\n\n    public render(): React.ReactElement {\n        if (this.isError()) {\n            if (this.is403Error()) {\n                return (\n                    <AccessErrorPage error={this.state.error}/>\n                );\n            } else if (this.is419Error()) {\n                return (\n                    <RateLimitErrorPage error={this.state.error}/>\n                );\n            } else {\n                return (\n                    <ErrorPage error={this.state.error}/>\n                );\n            }\n        } else if (this.isLoading()) {\n            return (\n                <React.Fragment>\n                    <PageSection variant={PageSectionVariants.default} isFilled={true}>\n                        <Flex>\n                            <FlexItem><Spinner size=\"lg\"/></FlexItem>\n                            <FlexItem><span>Loading...</span></FlexItem>\n                        </Flex>\n                    </PageSection>\n                </React.Fragment>\n            );\n        } else {\n            return this.renderPage();\n        }\n    }\n\n    /**\n     * Renders the page content.  Subclasses should implement this instead of render() so that\n     * errors are handled/displayed properly.\n     */\n    protected abstract renderPage(): React.ReactElement;\n\n    protected postConstruct(): void {\n        // @ts-ignore\n        PureComponent.setHistory(this.props.history);\n        super.postConstruct();\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise | Promise[] | null {\n        return null;\n    }\n\n    protected handleServerError(error: any, errorMessage: string): void {\n        this.handleError(PageErrorType.Server, error, errorMessage);\n    }\n\n    protected getPathParam(paramName: string): string {\n        // @ts-ignore\n        const paramValue: string = this.props.match.params[paramName];\n        const paramValueDecoded: string = decodeURIComponent(paramValue);\n        return paramValueDecoded;\n    }\n\n    protected isLoading(): boolean {\n        return this.state.isLoading ? true : false;\n    }\n\n    private loadPageData(): void {\n        // @ts-ignore\n        let loaders: Promise | Promise[] | null = this.createLoaders();\n\n        // If not loading anything, convert from null to empty array\n        if (loaders == null) {\n            loaders = [];\n        }\n\n        // Convert to array if not already\n        if (!Array.isArray(loaders)) {\n            loaders = [ loaders ];\n        }\n\n        // Always add the \"update current user\" loader\n        loaders = [\n            Services.getUsersService().updateCurrentUser(),\n            ...loaders\n        ];\n\n        if (loaders.length === 0) {\n            this.setSingleState(\"isLoading\", false);\n        } else {\n            this.setSingleState(\"isLoading\", true);\n            Promise.all(loaders).then(() => {\n                this.setSingleState(\"isLoading\", false);\n            }).catch(error => {\n                Services.getLoggerService().debug(\"[PageComponent] Page data load failed, retrying.\");\n                const retries: number = this.getRetries();\n                if (retries < MAX_RETRIES) {\n                    this.incrementRetries();\n                    setTimeout(() => {\n                        this.loadPageData();\n                    }, Math.pow(2, retries) * 100);\n                } else {\n                    this.handleServerError(error, \"Error loading page data.\");\n                }\n            });\n        }\n    }\n\n    private getRetries(): number {\n        return this.state.pageLoadRetries !== undefined ? this.state.pageLoadRetries as number : 0;\n    }\n\n    private incrementRetries(): void {\n        const retries: number = this.getRetries() + 1;\n        this.setSingleState(\"pageLoadRetries\", retries);\n    }\n\n    private isError(): boolean {\n        return this.state.isError ? true : false;\n    }\n\n    private is403Error(): boolean {\n        return this.state.error && this.state.error.error.status && (this.state.error.error.status == 403);\n    }\n\n    private is419Error(): boolean {\n        return this.state.error && this.state.error.error.status && (this.state.error.error.status == 419);\n    }\n\n    private handleError(errorType: PageErrorType, error: any, errorMessage: any): void {\n        Services.getLoggerService().error(\"[PageComponent] Handling an error of type: \", errorType);\n        Services.getLoggerService().error(\"[PageComponent] \", errorMessage);\n        Services.getLoggerService().error(\"[PageComponent] \", error);\n        this.setMultiState({\n            error: {\n                error,\n                errorMessage,\n                type: errorType\n            },\n            isError: true\n        });\n    }\n}\n","/**\n * @license\n * Copyright 2021 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./errorPage.css\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from \"@patternfly/react-core\";\nimport { LockedIcon } from \"@patternfly/react-icons\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport { ErrorPage, ErrorPageProps } from \"./errorPage\";\n\n\nexport class AccessErrorPage extends ErrorPage {\n\n    constructor(props: Readonly<ErrorPageProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_error\" variant={PageSectionVariants.light}>\n                    <div className=\"centerizer\">\n                        <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={LockedIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">Access permissions needed</Title>\n                            <EmptyStateBody>\n                                To access this Service Registry instance, contact your organization administrators.\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-back\"\n                                        onClick={this.navigateBack}>Return to previous page</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                    </div>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected navigateBack = (): void => {\n        window.history.back();\n    };\n\n}\n","/**\n * @license\n * Copyright 2022 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./errorPage.css\";\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    EmptyStateVariant,\n    PageSection,\n    PageSectionVariants,\n    Title\n} from \"@patternfly/react-core\";\nimport { ExclamationCircleIcon } from \"@patternfly/react-icons\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport { ErrorPage, ErrorPageProps } from \"./errorPage\";\n\n\nexport class RateLimitErrorPage extends ErrorPage {\n\n    constructor(props: Readonly<ErrorPageProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <React.Fragment>\n                <PageSection className=\"ps_error\" variant={PageSectionVariants.light}>\n                    <div className=\"centerizer\">\n                        <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={ExclamationCircleIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">Current usage is too high</Title>\n                            <EmptyStateBody>\n                                This Service Registry instance is throttled due to a high request rate. Ensure\n                                that existing applications are properly configured to cache the schemas.\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-back\"\n                                        onClick={this.navigateBack}>Return to previous page</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                    </div>\n                </PageSection>\n            </React.Fragment>\n        );\n    }\n\n    protected navigateBack = (): void => {\n        window.history.back();\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class ArtifactMetaData {\n\n    public groupId: string|null;\n    public id: string;\n    public name: string|null;\n    public description: string|null;\n    public labels: string[]|null;\n    public properties: { [key: string]: string };\n    public type: string;\n    public version: string;\n    public createdBy: string;\n    public createdOn: Date;\n    public modifiedBy: string;\n    public modifiedOn: Date;\n    public globalId: number;\n    public contentId: number|null;\n    public state: string;\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// tslint:disable-next-line:interface-name\nexport class ArtifactTypes {\n\n    public static AVRO: string = \"AVRO\";\n    public static PROTOBUF: string = \"PROTOBUF\";\n    public static JSON: string = \"JSON\";\n    public static OPENAPI: string = \"OPENAPI\";\n    public static ASYNCAPI: string = \"ASYNCAPI\";\n    public static GRAPHQL: string = \"GRAPHQL\";\n    public static KCONNECT: string = \"KCONNECT\";\n    public static WSDL: string = \"WSDL\";\n    public static XSD: string = \"XSD\";\n    public static XML: string = \"XML\";\n\n}\n"],"names":["props","render","this","accept","children","initializeState","auth","rval","undefined","enabled","isAuthenticationEnabled","isAuthenticated","isAdmin","isUserAdmin","isDeveloper","isUserDeveloper","owner","isOwner","isUserId","isAdminOrOwner","featureValue","features","feature","is","isNot","IfNotEmpty","collection","emptyState","emptyStateTitle","emptyStateMessage","empty","EmptyState","variant","EmptyStateVariant","Title","headingLevel","size","EmptyStateBody","length","pageToolbar","PageHeaderTools","className","PageHeaderToolsGroup","PageHeaderToolsItem","id","PageHeader","logo","Brand","onClick","navigateTo","linkTo","src","alt","showNavToggle","headerTools","handleTabClick","event","eventKey","tabKey","tabs","Tab","key","title","TabTitleText","featureRoleManagement","push","featureSettings","Tabs","activeKey","onSelect","postConstruct","renderPage","groupId","groupIdParam","artifactId","artifactIdParam","redirect","encodeURIComponent","info","Redirect","to","getPathParam","initializePageState","ArtifactRedirectPage","PageErrorType","navigateBack","window","history","back","PageSection","PageSectionVariants","EmptyStateIcon","icon","LockedIcon","EmptyStateSecondaryActions","Button","ExclamationCircleIcon","setTimeout","loadPageData","isLoading","componentDidCatch","error","errorInfo","handleError","React","isError","is403Error","AccessErrorPage","state","is419Error","RateLimitErrorPage","isFilled","Flex","FlexItem","Spinner","createLoaders","handleServerError","errorMessage","Server","paramName","paramValue","match","params","decodeURIComponent","loaders","Array","isArray","updateCurrentUser","setSingleState","Promise","all","then","catch","debug","retries","getRetries","incrementRetries","Math","pow","pageLoadRetries","status","errorType","setMultiState","type","AVRO","PROTOBUF","JSON","OPENAPI","ASYNCAPI","GRAPHQL","KCONNECT","WSDL","XSD","XML"],"sourceRoot":""}