{"version":3,"sources":["webpack://@apicurio/registry-ui/./src/app/components/common/if.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/artifactVersion.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/modals/editMetaDataModal.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/pageheader/pageheader.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/pageheader/version-selector.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/tabs/content.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/tabs/documentation.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/tabs/errorTab.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/tabs/info.tsx","webpack://@apicurio/registry-ui/./src/app/pages/artifactVersion/components/uploadForm/uploadForm.tsx"],"names":[],"mappings":"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","file":"982.bundle.4014e9587b29288aa569.js","sourcesContent":["/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../baseComponent\";\n\n/**\n * Properties\n */\nexport interface IfProps extends PureComponentProps {\n    condition: boolean | (() => boolean);\n    children?: React.ReactNode;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface IfState extends PureComponentState {\n}\n\n\n/**\n * Wrapper around a set of arbitrary child elements and displays them only if the\n * indicated condition is true.\n */\nexport class If extends PureComponent<IfProps, IfState> {\n\n    constructor(props: Readonly<IfProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.accept()) {\n            return <React.Fragment children={this.props.children} />\n        } else {\n            return <React.Fragment />\n        }\n    }\n\n    protected initializeState(): IfState {\n        return {};\n    }\n\n    private accept(): boolean {\n        if (typeof this.props.condition === \"boolean\") {\n            return this.props.condition;\n        } else {\n            return this.props.condition();\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from \"react\";\nimport \"./artifactVersion.css\";\nimport {\n    Breadcrumb,\n    BreadcrumbItem,\n    Button,\n    Modal,\n    PageSection,\n    PageSectionVariants,\n    Tab,\n    Tabs\n} from '@patternfly/react-core';\nimport {PageComponent, PageProps, PageState} from \"../basePage\";\nimport {ContentTabContent, DocumentationTabContent, InfoTabContent} from \"./components/tabs\";\nimport {ArtifactVersionPageHeader} from \"./components/pageheader\";\nimport {UploadVersionForm} from \"./components/uploadForm\";\nimport {Link} from \"react-router-dom\";\nimport {EditMetaDataModal} from \"./components/modals\";\nimport {InvalidContentModal} from \"../../components/modals\";\nimport {IfFeature} from \"../../components\";\nimport {ArtifactMetaData, ArtifactTypes, ContentTypes, Rule, SearchedVersion} from \"../../../models\";\nimport {CreateVersionData, EditableMetaData, Services} from \"../../../services\";\nimport {PleaseWaitModal} from \"../../components/modals/pleaseWaitModal\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactVersionPageProps extends PageProps {\n}\n\n/**\n * State\n */\nexport interface ArtifactVersionPageState extends PageState {\n    activeTabKey: number;\n    artifact: ArtifactMetaData | null;\n    artifactContent: string;\n    artifactIsText: boolean;\n    isInvalidContentModalOpen: boolean;\n    isUploadFormValid: boolean;\n    isUploadModalOpen: boolean;\n    isDeleteModalOpen: boolean;\n    isEditModalOpen: boolean;\n    isPleaseWaitModalOpen: boolean;\n    pleaseWaitMessage: string;\n    rules: Rule[] | null;\n    uploadFormData: string | null;\n    versions: SearchedVersion[] | null;\n    invalidContentError: any | null;\n}\n\nfunction is404(e: any) {\n    if (typeof e === \"string\") {\n        try {\n            const eo: any = JSON.parse(e);\n            if (eo && eo.error_code && eo.error_code === 404) {\n                return true;\n            }\n        } catch (e) {\n            // Do nothing\n        }\n    }\n    return false;\n}\n\n/**\n * The artifacts page.\n */\nexport class ArtifactVersionPage extends PageComponent<ArtifactVersionPageProps, ArtifactVersionPageState> {\n\n    constructor(props: Readonly<ArtifactVersionPageProps>) {\n        super(props);\n    }\n\n    public renderPage(): React.ReactElement {\n        const artifact: ArtifactMetaData = this.state.artifact ? this.state.artifact : new ArtifactMetaData();\n        const tabs: React.ReactNode[] = [\n            <Tab eventKey={0} title=\"Info\" key=\"info\" tabContentId=\"tab-info\">\n                <InfoTabContent artifact={artifact}\n                                rules={this.rules()}\n                                onEnableRule={this.doEnableRule}\n                                onDisableRule={this.doDisableRule}\n                                onConfigureRule={this.doConfigureRule}\n                                onDownloadArtifact={this.doDownloadArtifact}\n                                onEditMetaData={this.openEditMetaDataModal}\n                />\n            </Tab>,\n            <Tab eventKey={1} title=\"Documentation\" key=\"documentation\">\n                <DocumentationTabContent artifactContent={this.state.artifactContent} artifactType={artifact.type} />\n            </Tab>,\n            <Tab eventKey={2} title=\"Content\" key=\"content\">\n                <ContentTabContent artifactContent={this.state.artifactContent} artifactType={artifact.type} />\n            </Tab>,\n        ];\n        if (!this.showDocumentationTab()) {\n            tabs.splice(1, 1);\n        }\n\n        let groupId: string = this.groupIdParam();\n        let hasGroup: boolean = groupId != \"default\";\n        let breadcrumbs = (\n            <Breadcrumb>\n                <BreadcrumbItem><Link to={this.linkTo(\"/artifacts\")} data-testid=\"breadcrumb-lnk-artifacts\">Artifacts</Link></BreadcrumbItem>\n                <BreadcrumbItem><Link to={this.linkTo(`/artifacts?group=${ encodeURIComponent(groupId) }`)}\n                                      data-testid=\"breadcrumb-lnk-group\">{ groupId }</Link></BreadcrumbItem>\n                <BreadcrumbItem isActive={true}>{ this.artifactId() }</BreadcrumbItem>\n            </Breadcrumb>\n        );\n        if (!hasGroup) {\n            breadcrumbs = (\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/artifacts\" data-testid=\"breadcrumb-lnk-artifacts\">Artifacts</Link></BreadcrumbItem>\n                    <BreadcrumbItem isActive={true}>{ this.artifactId() }</BreadcrumbItem>\n                </Breadcrumb>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <IfFeature feature=\"breadcrumbs\" is={true}>\n                    <PageSection className=\"ps_header-breadcrumbs\" variant={PageSectionVariants.light} children={breadcrumbs} />\n                </IfFeature>\n                <PageSection className=\"ps_artifact-version-header\" variant={PageSectionVariants.light}>\n                    <ArtifactVersionPageHeader title={this.nameOrId()}\n                                               versions={this.versions()}\n                                               version={this.versionParam()}\n                                               onUploadVersion={this.onUploadVersion}\n                                               onDeleteArtifact={this.onDeleteArtifact}\n                                               groupId={groupId}\n                                               artifactId={this.artifactId()} />\n                </PageSection>\n                <PageSection variant={PageSectionVariants.light} isFilled={true} padding={{default : \"noPadding\"}} className=\"artifact-details-main\">\n                    <Tabs className=\"artifact-page-tabs\"\n                          id=\"artifact-page-tabs\"\n                          unmountOnExit={true}\n                          isFilled={false}\n                          activeKey={this.state.activeTabKey}\n                          children={tabs}\n                          onSelect={this.handleTabClick}\n                    />\n                </PageSection>\n                <Modal\n                    title=\"Upload Artifact Version\"\n                    variant=\"large\"\n                    isOpen={this.state.isUploadModalOpen}\n                    onClose={this.onUploadModalClose}\n                    className=\"upload-artifact-modal pf-m-redhat-font\"\n                    actions={[\n                        <Button key=\"upload\" variant=\"primary\" data-testid=\"modal-btn-upload\" onClick={this.doUploadArtifactVersion} isDisabled={!this.state.isUploadFormValid}>Upload</Button>,\n                        <Button key=\"cancel\" variant=\"link\" data-testid=\"modal-btn-cancel\" onClick={this.onUploadModalClose}>Cancel</Button>\n                    ]}\n                >\n                    <UploadVersionForm onChange={this.onUploadFormChange} onValid={this.onUploadFormValid} />\n                </Modal>\n                <Modal\n                    title=\"Delete Artifact\"\n                    variant=\"small\"\n                    isOpen={this.state.isDeleteModalOpen}\n                    onClose={this.onDeleteModalClose}\n                    className=\"delete-artifact-modal pf-m-redhat-font\"\n                    actions={[\n                        <Button key=\"delete\" variant=\"primary\" data-testid=\"modal-btn-delete\" onClick={this.doDeleteArtifact}>Delete</Button>,\n                        <Button key=\"cancel\" variant=\"link\" data-testid=\"modal-btn-cancel\" onClick={this.onDeleteModalClose}>Cancel</Button>\n                    ]}\n                >\n                    <p>Do you want to delete this artifact and all of its versions?  This action cannot be undone.</p>\n                </Modal>\n                <EditMetaDataModal name={this.artifactName()}\n                                   description={this.artifactDescription()}\n                                   labels={this.artifactLabels()}\n                                   isOpen={this.state.isEditModalOpen}\n                                   onClose={this.onEditModalClose}\n                                   onEditMetaData={this.doEditMetaData}\n                />\n                <InvalidContentModal error={this.state.invalidContentError}\n                                     isOpen={this.state.isInvalidContentModalOpen}\n                                     onClose={this.closeInvalidContentModal} />\n                <PleaseWaitModal message={this.state.pleaseWaitMessage}\n                                 isOpen={this.state.isPleaseWaitModalOpen} />\n            </React.Fragment>\n        );\n    }\n\n    protected initializePageState(): ArtifactVersionPageState {\n        return {\n            activeTabKey: 0,\n            artifact: null,\n            artifactContent: \"\",\n            artifactIsText: true,\n            invalidContentError: null,\n            isDeleteModalOpen: false,\n            isEditModalOpen: false,\n            isInvalidContentModalOpen: false,\n            isLoading: true,\n            isPleaseWaitModalOpen: false,\n            isUploadFormValid: false,\n            isUploadModalOpen: false,\n            pleaseWaitMessage: \"\",\n            rules: null,\n            uploadFormData: null,\n            versions: null\n        };\n    }\n\n    protected groupIdParam(): string {\n        return this.getPathParam(\"groupId\");\n    }\n\n    protected artifactIdParam(): string {\n        return this.getPathParam(\"artifactId\");\n    }\n\n    protected versionParam(): string {\n        return this.getPathParam(\"version\");\n    }\n\n    // @ts-ignore\n    protected createLoaders(): Promise[] | null {\n        let groupId: string|null = this.groupIdParam();\n        if (groupId == \"default\") {\n            groupId = null;\n        }\n        const artifactId: string = this.artifactIdParam();\n        Services.getLoggerService().info(\"Loading data for artifact: \", artifactId);\n        return [\n            Services.getGroupsService().getArtifactMetaData(groupId, artifactId, this.versionParam()).then(md => this.setSingleState(\"artifact\", md)),\n            Services.getGroupsService().getArtifactContent(groupId, artifactId, this.versionParam())\n                .then(content => this.setSingleState(\"artifactContent\", content))\n                .catch(e => {\n                    Services.getLoggerService().warn(\"Failed to get artifact content: \", e);\n                    if (is404(e)) {\n                        this.setSingleState(\"artifactContent\", \"Artifact version content not available (404 Not Found).\");\n                    } else {\n                        throw e;\n                    }\n                }\n            ),\n            Services.getGroupsService().getArtifactRules(groupId, artifactId).then(rules => this.setSingleState(\"rules\", rules)),\n            Services.getGroupsService().getArtifactVersions(groupId, artifactId).then(versions => this.setSingleState(\"versions\", versions.reverse()))\n        ];\n    }\n\n    private handleTabClick = (event: any, tabIndex: any): void => {\n        this.setSingleState(\"activeTabKey\", tabIndex);\n    };\n\n    private onUploadVersion = (): void => {\n        this.setSingleState(\"isUploadModalOpen\", true);\n    };\n\n    private onDeleteArtifact = (): void => {\n        this.setSingleState(\"isDeleteModalOpen\", true);\n    };\n\n    private showDocumentationTab(): boolean {\n        if (this.state.artifact) {\n            return this.state.artifact.type === \"OPENAPI\" && this.state.artifact.state !== \"DISABLED\";\n        } else {\n            return false;\n        }\n    }\n\n    private rules(): Rule[] {\n        return this.state.rules ? this.state.rules : [];\n    }\n\n    private doEnableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[ArtifactVersionPage] Enabling rule:\", ruleType);\n        let config: string = \"FULL\";\n        if (ruleType === \"COMPATIBILITY\") {\n            config = \"BACKWARD\";\n        }\n        Services.getGroupsService().createArtifactRule(this.groupId(), this.artifactId(), ruleType, config).catch(error => {\n            this.handleServerError(error, `Error enabling \"${ ruleType }\" artifact rule.`);\n        });\n        this.setSingleState(\"rules\", [...this.rules(), {config, type: ruleType}]);\n    };\n\n    private doDisableRule = (ruleType: string): void => {\n        Services.getLoggerService().debug(\"[ArtifactVersionPage] Disabling rule:\", ruleType);\n        Services.getGroupsService().deleteArtifactRule(this.groupId(), this.artifactId(), ruleType).catch(error => {\n            this.handleServerError(error, `Error disabling \"${ ruleType }\" artifact rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().filter(r => r.type !== ruleType));\n    };\n\n    private doConfigureRule = (ruleType: string, config: string): void => {\n        Services.getLoggerService().debug(\"[ArtifactVersionPage] Configuring rule:\", ruleType, config);\n        Services.getGroupsService().updateArtifactRule(this.groupId(), this.artifactId(), ruleType, config).catch(error => {\n            this.handleServerError(error, `Error configuring \"${ ruleType }\" artifact rule.`);\n        });\n        this.setSingleState(\"rules\", this.rules().map(r => {\n            if (r.type === ruleType) {\n                return {config, type: r.type};\n            } else {\n                return r;\n            }\n        }));\n    };\n\n    private doDownloadArtifact = (): void => {\n        const content: string = this.state.artifactContent;\n\n        let contentType: string = ContentTypes.APPLICATION_JSON;\n        let fext: string = \"json\";\n        if (this.state.artifact?.type === ArtifactTypes.PROTOBUF) {\n            contentType = ContentTypes.APPLICATION_PROTOBUF;\n            fext = \"proto\";\n        }\n        if (this.state.artifact?.type === ArtifactTypes.WSDL) {\n            contentType = ContentTypes.APPLICATION_XML;\n            fext = \"wsdl\";\n        }\n        if (this.state.artifact?.type === ArtifactTypes.XSD) {\n            contentType = ContentTypes.APPLICATION_XML;\n            fext = \"xsd\";\n        }\n        if (this.state.artifact?.type === ArtifactTypes.XML) {\n            contentType = ContentTypes.APPLICATION_XML;\n            fext = \"xml\";\n        }\n        if (this.state.artifact?.type === ArtifactTypes.GRAPHQL) {\n            contentType = ContentTypes.APPLICATION_JSON;\n            fext = \"graphql\";\n        }\n\n        const fname: string = this.artifactNameOrId() + \".\" + fext;\n        Services.getDownloaderService().downloadToFS(content, contentType, fname);\n    };\n\n    private nameOrId(): string {\n        if (!this.state.artifact) {\n            return \"\";\n        }\n        return this.state.artifact.name ? this.state.artifact.name : this.state.artifact.id;\n    }\n\n    private versions(): SearchedVersion[] {\n        return this.state.versions ? this.state.versions : [];\n    }\n\n    private artifactId(): string {\n        return this.state.artifact ? this.state.artifact.id : \"\";\n    }\n\n    private groupId(): string|null {\n        return this.state.artifact ? this.state.artifact.groupId : null;\n    }\n\n    private artifactType(): string {\n        return this.state.artifact ? this.state.artifact.type : \"\";\n    }\n\n    private artifactNameOrId(): string {\n        return this.state.artifact ? (\n            this.state.artifact.name ? this.state.artifact.name : this.state.artifact.id\n        ) : \"\";\n    }\n\n    private artifactName(): string {\n        return this.state.artifact ? (\n            this.state.artifact.name ? this.state.artifact.name : \"\"\n        ) : \"\";\n    }\n\n    private artifactDescription(): string {\n        return this.state.artifact ? (\n            this.state.artifact.description ? this.state.artifact.description : \"\"\n        ) : \"\";\n    }\n\n    private artifactLabels(): string[] {\n        return this.state.artifact ? (\n            this.state.artifact.labels ? this.state.artifact.labels : []\n        ) : [];\n    }\n\n    private onUploadFormValid = (isValid: boolean): void => {\n        this.setSingleState(\"isUploadFormValid\", isValid);\n    };\n\n    private onUploadFormChange = (data: string): void => {\n        this.setSingleState(\"uploadFormData\", data);\n    };\n\n    private onUploadModalClose = (): void => {\n        this.setSingleState(\"isUploadModalOpen\", false);\n    };\n\n    private onDeleteModalClose = (): void => {\n        this.setSingleState(\"isDeleteModalOpen\", false);\n    };\n\n    private doUploadArtifactVersion = (): void => {\n        this.onUploadModalClose();\n        this.pleaseWait(true, \"Uploading new version, please wait...\");\n        if (this.state.uploadFormData !== null) {\n            const data: CreateVersionData = {\n                content: this.state.uploadFormData,\n                type: this.artifactType()\n            };\n            Services.getGroupsService().createArtifactVersion(this.groupId(), this.artifactId(), data).then(versionMetaData => {\n                const groupId: string = versionMetaData.groupId ? versionMetaData.groupId : \"default\";\n                const artifactVersionLocation: string = `/artifacts/${ encodeURIComponent(groupId) }/${ encodeURIComponent(versionMetaData.id) }/versions/${versionMetaData.version}`;\n                Services.getLoggerService().info(\"[ArtifactVersionPage] Artifact version successfully uploaded.  Redirecting to details: \", artifactVersionLocation);\n                this.navigateTo(this.linkTo(artifactVersionLocation))();\n            }).catch( error => {\n                this.pleaseWait(false, \"\");\n                if (error && error.error_code === 409) {\n                    this.handleInvalidContentError(error);\n                } else {\n                    this.handleServerError(error, \"Error uploading artifact version.\");\n                }\n            });\n        }\n    };\n\n    private doDeleteArtifact = (): void => {\n        this.onDeleteModalClose();\n        this.pleaseWait(true, \"Deleting artifact, please wait...\");\n        Services.getGroupsService().deleteArtifact(this.groupId(), this.artifactId()).then( () => {\n            this.pleaseWait(false, \"\");\n            this.navigateTo(this.linkTo(\"/artifacts\"))();\n        });\n    };\n\n    private openEditMetaDataModal = (): void => {\n        this.setSingleState(\"isEditModalOpen\", true);\n    };\n\n    private onEditModalClose = (): void => {\n        this.setSingleState(\"isEditModalOpen\", false);\n    };\n\n    private doEditMetaData = (metaData: EditableMetaData): void => {\n        Services.getGroupsService().updateArtifactMetaData(this.groupId(), this.artifactId(), this.versionParam(), metaData).then( () => {\n            if (this.state.artifact) {\n                this.setSingleState(\"artifact\", {\n                    ...this.state.artifact,\n                    ...metaData\n                });\n            }\n        }).catch( error => {\n            this.handleServerError(error, \"Error editing artifact meta-data.\");\n        });\n        this.onEditModalClose();\n    };\n\n    private closeInvalidContentModal = (): void => {\n        this.setSingleState(\"isInvalidContentModalOpen\", false);\n    };\n\n    private pleaseWait = (isOpen: boolean, message: string): void => {\n        this.setMultiState({\n            isPleaseWaitModalOpen: isOpen,\n            pleaseWaitMessage: message\n        });\n    };\n\n    private handleInvalidContentError(error: any): void {\n        Services.getLoggerService().info(\"INVALID CONTENT ERROR\", error);\n        this.setMultiState({\n            invalidContentError: error,\n            isInvalidContentModalOpen: true\n        });\n    }\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport \"./editMetaDataModal.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {Button, Form, FormGroup, Modal, TextArea, TextInput} from \"@patternfly/react-core\";\nimport {EditableMetaData} from \"../../../../../services\";\n\n\n/**\n * Properties\n */\nexport interface EditMetaDataModalProps extends PureComponentProps {\n    name: string;\n    description: string;\n    labels: string[];\n    isOpen: boolean;\n    onClose: () => void;\n    onEditMetaData: (metaData: EditableMetaData) => void;\n}\n\n/**\n * State\n */\nexport interface EditMetaDataModalState extends PureComponentState {\n    labels: string;\n    metaData: EditableMetaData;\n}\n\n/**\n * Models the toolbar for the Artifacts page.\n */\nexport class EditMetaDataModal extends PureComponent<EditMetaDataModalProps, EditMetaDataModalState> {\n\n    constructor(props: Readonly<EditMetaDataModalProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <Modal\n                title=\"Edit Artifact Meta-Data\"\n                variant=\"large\"\n                isOpen={this.props.isOpen}\n                onClose={this.props.onClose}\n                className=\"edit-artifact-metaData pf-m-redhat-font\"\n                actions={[\n                    <Button key=\"edit\" variant=\"primary\" data-testid=\"modal-btn-edit\" onClick={this.doEdit}>Edit</Button>,\n                    <Button key=\"cancel\" variant=\"link\" data-testid=\"modal-btn-cancel\" onClick={this.props.onClose}>Cancel</Button>\n                ]}\n            >\n                <p>Use the form below to update the Name and Description of the artifact.</p>\n                <Form>\n                    <FormGroup\n                        label=\"Name\"\n                        fieldId=\"form-name\"\n                    >\n                        <TextInput\n                            isRequired={false}\n                            type=\"text\"\n                            id=\"form-name\"\n                            data-testid=\"form-name\"\n                            name=\"form-name\"\n                            aria-describedby=\"form-name-helper\"\n                            value={this.state.metaData.name}\n                            placeholder=\"Name of the artifact\"\n                            onChange={this.onNameChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup\n                        label=\"Labels\"\n                        fieldId=\"form-labels\"\n                        helperText=\"A comma-separated list of labels to apply to the artifact.\"\n                    >\n                        <TextInput\n                            isRequired={false}\n                            type=\"text\"\n                            id=\"form-labels\"\n                            data-testid=\"form-labels\"\n                            name=\"form-labels\"\n                            aria-describedby=\"form-labels-helper\"\n                            value={this.state.labels}\n                            placeholder=\"Artifact labels\"\n                            onChange={this.onLabelsChange}\n                        />\n                    </FormGroup>\n\n                    <FormGroup\n                        label=\"Description\"\n                        fieldId=\"form-description\"\n                    >\n                        <TextArea\n                            isRequired={false}\n                            id=\"form-description\"\n                            data-testid=\"form-description\"\n                            name=\"form-description\"\n                            aria-describedby=\"form-description-helper\"\n                            value={this.state.metaData.description}\n                            placeholder=\"Description of the artifact\"\n                            onChange={this.onDescriptionChange}\n                        />\n                    </FormGroup>\n                </Form>\n            </Modal>\n        );\n    }\n\n    public componentDidUpdate(prevProps: Readonly<EditMetaDataModalProps>): void {\n        if (this.props.isOpen && !prevProps.isOpen) {\n            this.setMultiState({\n                labels: this.props.labels.join(\", \"),\n                metaData: {\n                    description: this.props.description,\n                    labels: this.props.labels,\n                    name: this.props.name\n                }\n            });\n        }\n    }\n\n    protected initializeState(): EditMetaDataModalState {\n        return {\n            labels: \"\",\n            metaData: {\n                description: \"\",\n                labels: [],\n                name: \"\"\n            }\n        };\n    }\n\n    private labels(): string {\n        if (this.state.metaData.labels) {\n            return this.state.metaData.labels.join(\", \");\n        } else {\n            return \"\";\n        }\n    }\n\n    private doEdit = (): void => {\n        this.props.onEditMetaData(this.state.metaData);\n    };\n\n    private onNameChange = (value: string): void => {\n        this.setSingleState(\"metaData\", {\n            ...this.state.metaData,\n            name: value\n        });\n    };\n\n    private onLabelsChange = (value: string): void => {\n        let labels: string[] = [];\n        if (value && value.trim().length > 0) {\n            labels = value.trim().split(\",\").map(item => item.trim());\n        }\n        this.setMultiState({\n            labels: value,\n            metaData: {\n                ...this.state.metaData,\n                labels\n            }\n        });\n    };\n\n    private onDescriptionChange = (value: string): void => {\n        this.setSingleState(\"metaData\", {\n            ...this.state.metaData,\n            description: value\n        });\n    };\n\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./pageheader.css\";\nimport {\n    Button,\n    Flex,\n    FlexItem,\n    Text,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport {IfAuth, PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {VersionSelector} from \"./version-selector\";\nimport {TrashIcon} from \"@patternfly/react-icons\";\nimport {IfFeature} from \"../../../../components/common/ifFeature\";\nimport {SearchedVersion} from \"../../../../../models\";\n\n\n/**\n * Properties\n */\nexport interface ArtifactVersionPageHeaderProps extends PureComponentProps {\n    title: string;\n    groupId: string;\n    artifactId: string;\n    onDeleteArtifact: () => void;\n    onUploadVersion: () => void;\n    version: string;\n    versions: SearchedVersion[];\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ArtifactVersionPageHeaderState extends PureComponentState {\n}\n\n\n/**\n * Models the page header for the Artifact page.\n */\nexport class ArtifactVersionPageHeader extends PureComponent<ArtifactVersionPageHeaderProps, ArtifactVersionPageHeaderState> {\n\n    constructor(props: Readonly<ArtifactVersionPageHeaderProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <Flex className=\"example-border\">\n                <FlexItem>\n                    <TextContent>\n                        <Text component={TextVariants.h1}>{ this.props.title }</Text>\n                    </TextContent>\n                </FlexItem>\n                <FlexItem align={{ default : 'alignRight' }}>\n                    <VersionSelector version={this.props.version} versions={this.props.versions}\n                                     groupId={this.props.groupId} artifactId={this.props.artifactId} />\n                    <IfAuth isDeveloper={true}>\n                        <IfFeature feature=\"readOnly\" isNot={true}>\n                            <Button id=\"delete-artifact-button\" variant=\"secondary\" data-testid=\"header-btn-delete\" onClick={this.props.onDeleteArtifact}>Delete</Button>\n                            <Button id=\"upload-version-button\" variant=\"primary\" data-testid=\"header-btn-upload-version\" onClick={this.props.onUploadVersion}>Upload new version</Button>\n                        </IfFeature>\n                    </IfAuth>\n                </FlexItem>\n            </Flex>\n        );\n    }\n\n    protected initializeState(): ArtifactVersionPageHeaderState {\n        return {};\n    }\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./version-selector.css\";\nimport {Button, ButtonVariant, Dropdown, DropdownToggle, InputGroup, TextInput} from '@patternfly/react-core';\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {SearchIcon} from \"@patternfly/react-icons\";\nimport Moment from \"react-moment\";\nimport {Link} from \"react-router-dom\";\nimport {SearchedVersion} from \"../../../../../models\";\nimport {Services} from \"../../../../../services\";\n\n\n/**\n * Properties\n */\nexport interface VersionSelectorProps extends PureComponentProps {\n    groupId: string;\n    artifactId: string;\n    version: string;\n    versions: SearchedVersion[];\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface VersionSelectorState extends PureComponentState {\n    isOpen: boolean;\n}\n\n\n/**\n * Models the page header for the Artifact page.\n */\nexport class VersionSelector extends PureComponent<VersionSelectorProps, VersionSelectorState> {\n\n    constructor(props: Readonly<VersionSelectorProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <Dropdown\n                className={this.dropdownClasses()}\n                toggle={<DropdownToggle data-testid=\"versions-toggle\" onToggle={this.onToggle}>Version: { this.props.version }</DropdownToggle>}\n                isOpen={this.state.isOpen}\n            >\n                <div className=\"version-filter\" style={{display: \"none\"}}>\n                    <InputGroup>\n                        <TextInput name=\"filter\" id=\"versionFilter\" type=\"search\" data-testid=\"versions-form-filter\" aria-label=\"Version filter\" />\n                        <Button variant={ButtonVariant.control} data-testid=\"versions-form-btn-search\" aria-label=\"search button for search input\">\n                            <SearchIcon />\n                        </Button>\n                    </InputGroup>\n                </div>\n                <div className=\"version-header\">\n                    <div className=\"version-item\">\n                        <span className=\"name\">Version</span>\n                        <span className=\"date\">Created On</span>\n                    </div>\n                </div>\n                <div className=\"version-list\">\n                    <Link key=\"latest\"\n                          data-testid=\"versions-lnk-latest\"\n                          to={this.linkTo(`/artifacts/${encodeURIComponent(this.props.groupId)}/${encodeURIComponent(this.props.artifactId)}/versions/latest`)}\n                          className=\"version-item latest\">\n                        <span className=\"name\">latest</span>\n                        <span className=\"date\" />\n                    </Link>\n                    {\n                        this.props.versions.map((v, idx) =>\n                            <Link key={v.version}\n                                  data-testid={`versions-lnk-${idx}`}\n                                  to={this.linkTo(`/artifacts/${encodeURIComponent(this.props.groupId)}/${encodeURIComponent(this.props.artifactId)}/versions/${v.version}`)}\n                                  className=\"version-item\">\n                                <span className=\"name\">{ v.version }</span>\n                                <span className=\"date\"><Moment date={v.createdOn} fromNow={true} /></span>\n                            </Link>\n                        )\n                    }\n                </div>\n            </Dropdown>\n        );\n    }\n\n    protected initializeState(): VersionSelectorState {\n        return {\n            isOpen: false\n        };\n    }\n\n    private dropdownClasses(): string {\n        const classes: string[] = [ \"version-selector-dropdown\" ];\n        if (Services.getConfigService().featureReadOnly()) {\n            classes.push(\"dropdown-align-right\");\n        }\n        return classes.join(' ');\n    }\n\n    private onToggle = (isOpen: boolean): void => {\n        this.setSingleState(\"isOpen\", isOpen);\n    };\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./content.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/mode-protobuf\";\nimport \"ace-builds/src-noconflict/mode-xml\";\nimport \"ace-builds/src-noconflict/mode-graphqlschema\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport {Button} from \"@patternfly/react-core\";\nimport {Services} from \"../../../../../services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ContentTabContentProps extends PureComponentProps {\n    artifactContent: string;\n    artifactType: string;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ContentTabContentState extends PureComponentState {\n    content: string;\n    contentIsJson: boolean;\n    formatBtnClasses: string;\n    editorWidth: string;\n    editorHeight: string;\n}\n\n\n/**\n * Models the content of the Artifact Info tab.\n */\nexport class ContentTabContent extends PureComponent<ContentTabContentProps, ContentTabContentState> {\n\n    constructor(props: Readonly<ContentTabContentProps>) {\n        super(props);\n    }\n\n    public componentDidMount(): void {\n        // TODO do this again whenever the browser is resized!\n        const elem: HTMLElement|null = document.getElementById(\"ace-wrapper\");\n        if (elem) {\n            const height: number|null = elem.clientHeight;\n            if (height) {\n                this.setSingleState(\"editorHeight\", height + \"px\");\n            }\n        }\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <div className=\"ace-wrapper\" id=\"ace-wrapper\">\n                <AceEditor\n                    data-testid=\"ace-content\"\n                    mode={this.editorMode()}\n                    theme=\"monokai\"\n                    name=\"artifactContent\"\n                    className=\"artifactContent\"\n                    width={this.state.editorWidth}\n                    height={this.state.editorHeight}\n                    fontSize={14}\n                    showPrintMargin={false}\n                    showGutter={true}\n                    highlightActiveLine={false}\n                    value={this.state.content}\n                    readOnly={true}\n                    setOptions={{\n                        enableBasicAutocompletion: false,\n                        enableLiveAutocompletion: false,\n                        enableSnippets: false,\n                        showLineNumbers: true,\n                        tabSize: 2,\n                        useWorker: false\n                    }}\n                />\n                <Button className={this.state.formatBtnClasses} key=\"format\" variant=\"primary\" data-testid=\"modal-btn-edit\" onClick={this.format}>Format</Button>\n            </div>\n        );\n    }\n\n    protected initializeState(): ContentTabContentState {\n        const contentIsJson: boolean = this.isJson(this.props.artifactContent);\n        let formatBtnClasses: string = \"format-btn\";\n        if (!contentIsJson) {\n            formatBtnClasses += \" hidden\";\n        }\n        return {\n            content: this.props.artifactContent,\n            contentIsJson,\n            editorHeight: \"500px\",\n            editorWidth: \"100%\",\n            formatBtnClasses\n        };\n    }\n\n    private editorMode(): string {\n        if (this.props.artifactType === \"PROTOBUF\") {\n            return \"protobuf\";\n        }\n        if (this.props.artifactType === \"WSDL\" || this.props.artifactType === \"XSD\" || this.props.artifactType === \"XML\") {\n            return \"xml\";\n        }\n        if (this.props.artifactType === \"GRAPHQL\") {\n            return \"graphqlschema\";\n        }\n        return \"json\";\n    }\n\n    private format = (): void => {\n        if (!this.state.contentIsJson) {\n            return;\n        }\n        try {\n            const pval: any = JSON.parse(this.props.artifactContent);\n            if (pval) {\n                this.setSingleState(\"content\", JSON.stringify(pval, null, 2));\n            }\n        } catch (e) {\n            // Do nothing\n            Services.getLoggerService().warn(\"Failed to format content!\");\n            Services.getLoggerService().error(e);\n        }\n    }\n\n    private isJson(content: string): boolean {\n        try {\n            const pval: any = JSON.parse(content);\n            if (pval) {\n                return true;\n            }\n        } catch (e) {\n            // Do nothing\n        }\n        return false;\n    }\n}\n\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./documentation.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {RedocStandalone} from \"redoc\";\nimport { ErrorTabContent } from \"./errorTab\";\nimport { Services } from \"src/services\";\n\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface DocumentationTabContentProps extends PureComponentProps {\n    artifactContent: string;\n    artifactType: string;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface DocumentationTabContentState extends PureComponentState {\n    parsedContent: any | undefined;\n    error: any | undefined\n}\n\n\n/**\n * Models the content of the Artifact Info tab.\n */\nexport class DocumentationTabContent extends PureComponent<DocumentationTabContentProps, DocumentationTabContentState> {\n\n    constructor(props: Readonly<DocumentationTabContentProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        if (this.isError()){\n            return <ErrorTabContent error={{errorMessage: \"Artifact isn't a valid OpenAPI structure\", error: this.state.error}}/>\n        }\n\n        let visualizer: React.ReactElement | null = null;\n        if (this.props.artifactType === \"OPENAPI\") {\n            visualizer = <RedocStandalone spec={this.state.parsedContent} />;\n        }\n\n        if (visualizer !== null) {\n            return visualizer;\n        } else {\n            return <h1>Unsupported Type: { this.props.artifactType }</h1>\n        }\n    }\n\n    protected initializeState(): DocumentationTabContentState {\n        try {\n            return {\n                parsedContent: JSON.parse(this.props.artifactContent),\n                error: undefined\n            };\n        } catch(ex) {\n            Services.getLoggerService().warn(\"Failed to parse content:\");\n            Services.getLoggerService().error(ex);\n            return {\n                parsedContent: undefined,\n                error: ex\n            };\n        }\n        \n    }\n\n    private isError() : boolean {\n        if(this.state.error){\n            return true;\n        }else{\n            return false;\n        }\n    }\n}\n","import React, { ReactNode } from \"react\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-text\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateSecondaryActions, EmptyStateVariant, Title } from \"@patternfly/react-core\";\nimport { ExclamationTriangleIcon } from \"@patternfly/react-icons\";\n\nexport interface TabError {\n    errorMessage: string,\n    error: any\n}\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ErrorTabContentProps extends PureComponentProps {\n    error?: TabError | undefined\n    children?: ReactNode\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface ErrorTabContentState extends PureComponentState {\n    isShowDetails: boolean;\n    editorWidth: string;\n    editorHeight: string;   \n}\n\n\nexport class ErrorTabContent extends PureComponent<ErrorTabContentProps, ErrorTabContentState> {\n\n    constructor(props: Readonly<ErrorTabContentProps>) {\n        super(props);\n    }\n\n    public render() {\n        return (\n            <div className=\"centerizer\">\n                    <EmptyState variant={EmptyStateVariant.large}>\n                            <EmptyStateIcon icon={ExclamationTriangleIcon} />\n                            <Title headingLevel=\"h5\" size=\"lg\">{ this.errorMessage() }</Title>\n                            <EmptyStateBody>\n                                { this.errorDescription() }\n                            </EmptyStateBody>\n                            <EmptyStateSecondaryActions>\n                                <Button variant=\"link\"\n                                        data-testid=\"error-btn-details\"\n                                        onClick={this.showDetails}>Show details</Button>\n                            </EmptyStateSecondaryActions>\n                        </EmptyState>\n                        <div className=\"separator\">&nbsp;</div>\n                        {\n                            this.state.isShowDetails ?\n                                <div className=\"ace-wrapper pf-c-empty-state pf-m-lg\" id=\"ace-wrapper\">\n                                    <AceEditor\n                                        data-testid=\"ace-details\"\n                                        mode=\"json\"\n                                        theme=\"tomorrow\"\n                                        name=\"errorDetail\"\n                                        className=\"errorDetail\"\n                                        width={this.state.editorWidth}\n                                        height={this.state.editorHeight}\n                                        fontSize={14}\n                                        showPrintMargin={false}\n                                        showGutter={false}\n                                        highlightActiveLine={false}\n                                        value={this.errorDetail()}\n                                        readOnly={true}\n                                        setOptions={{\n                                            enableBasicAutocompletion: false,\n                                            enableLiveAutocompletion: false,\n                                            enableSnippets: false,\n                                            showLineNumbers: true,\n                                            tabSize: 2,\n                                            useWorker: false\n                                        }}\n                                    />\n                                </div>\n                                :\n                                <div/>\n                        }\n            </div>\n        )\n    }\n    \n    protected initializeState(): ErrorTabContentState {\n        return {\n            editorHeight: \"250px\",\n            editorWidth: \"100%\",\n            isShowDetails: false\n        };\n    }\n\n    private errorMessage(): string {\n        if (this.props.error) {\n            return this.props.error.errorMessage;\n        } else {\n            return \"Internal server error\";\n        }\n    }\n\n    // Error description can be in node children - if it is missing, default description is used\n    private errorDescription(): ReactNode {\n        if (this.props.children) {\n            return this.props.children;\n        } else {\n            return (\n                \"The content you are trying to visualize is not valid (we could not parse it).  If possible, we'll try to provide you with some more information about \" +\n                \"the problem (see below).\"\n            );\n        }\n    }\n\n    private errorDetail(): string {\n        if (this.props.error && this.props.error.error && this.props.error.error.detail) {\n            return this.props.error.error.detail;\n        }else if (this.props.error && this.props.error.error && this.props.error.error.message) {\n            return this.props.error.error.message;\n        } else if (this.props.error && this.props.error.error) {\n            return JSON.stringify(this.props.error.error, null, 3);\n        } else {\n            return \"Error info not available\";\n        }\n    }\n\n    private showDetails = (): void => {\n        this.setSingleState(\"isShowDetails\", true);\n    };\n\n}\n\n\n\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from \"react\";\nimport \"./info.css\";\nimport {\n    ArtifactTypeIcon, IfAuth,\n    PureComponent,\n    PureComponentProps,\n    PureComponentState,\n    RuleList\n} from \"../../../../components\";\nimport {Badge, Button, Flex, FlexItem, Split, SplitItem} from \"@patternfly/react-core\";\nimport {DownloadIcon, EditIcon} from \"@patternfly/react-icons\";\nimport Moment from \"react-moment\";\nimport {IfFeature} from \"../../../../components/common/ifFeature\";\nimport {If} from \"../../../../components/common/if\";\nimport {ArtifactMetaData, Rule} from \"../../../../../models\";\n\n/**\n * Properties\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface InfoTabContentProps extends PureComponentProps {\n    artifact: ArtifactMetaData;\n    rules: Rule[];\n    onEnableRule: (ruleType: string) => void;\n    onDisableRule: (ruleType: string) => void;\n    onConfigureRule: (ruleType: string, config: string) => void;\n    onDownloadArtifact: () => void;\n    onEditMetaData: () => void;\n}\n\n/**\n * State\n */\n// tslint:disable-next-line:no-empty-interface\nexport interface InfoTabContentState extends PureComponentState {\n}\n\n\n/**\n * Models the content of the Artifact Info tab.\n */\nexport class InfoTabContent extends PureComponent<InfoTabContentProps, InfoTabContentState> {\n\n    constructor(props: Readonly<InfoTabContentProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <Flex className=\"artifact-tab-content\">\n                <FlexItem className=\"artifact-basics\">\n                    <div className=\"title-and-type\">\n                        <Split>\n                            <SplitItem className=\"type\"><ArtifactTypeIcon type={this.props.artifact.type} /></SplitItem>\n                            <SplitItem className=\"title\" isFilled={true}>Version Metadata</SplitItem>\n                            <SplitItem className=\"actions\">\n                                <IfAuth isDeveloper={true}>\n                                    <IfFeature feature=\"readOnly\" isNot={true}>\n                                        <Button id=\"edit-action\"\n                                                data-testid=\"artifact-btn-edit\"\n                                                title=\"Edit artifact meta-data\"\n                                                onClick={this.props.onEditMetaData}\n                                                variant=\"plain\"><EditIcon /></Button>\n                                    </IfFeature>\n                                </IfAuth>\n                            </SplitItem>\n                        </Split>\n                    </div>\n                    <div className=\"metaData\">\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">Name</span>\n                            <span className=\"value\">{this.props.artifact.name}</span>\n                        </div>\n                        <If condition={this.isArtifactInGroup}>\n                            <div className=\"metaDataItem\">\n                                <span className=\"label\">Group</span>\n                                <span className=\"value\">{this.props.artifact.groupId}</span>\n                            </div>\n                        </If>\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">ID</span>\n                            <span className=\"value\">{this.props.artifact.id}</span>\n                        </div>\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">Status</span>\n                            <span className=\"value\">{this.props.artifact.state}</span>\n                        </div>\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">Created</span>\n                            <span className=\"value\"><Moment date={this.props.artifact.createdOn} fromNow={true} /></span>\n                        </div>\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">Modified</span>\n                            <span className=\"value\"><Moment date={this.props.artifact.modifiedOn} fromNow={true} /></span>\n                        </div>\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">Global ID</span>\n                            <span className=\"value\">{this.props.artifact.globalId}</span>\n                        </div>\n                        <div className=\"metaDataItem\">\n                            <span className=\"label\">Content ID</span>\n                            <span className=\"value\">{this.props.artifact.contentId}</span>\n                        </div>\n                    </div>\n                    <div className=\"description\">{this.description()}</div>\n                    <div className=\"labels\">\n                        {\n                            this.labels().map( label =>\n                                <Badge key={label} isRead={true}>{label}</Badge>\n                            )\n                        }\n                    </div>\n                    <div className=\"actions\">\n                        <Button id=\"download-action\"\n                                data-testid=\"artifact-btn-download\"\n                                title=\"Download artifact content\"\n                                onClick={this.props.onDownloadArtifact}\n                                variant=\"secondary\"><DownloadIcon /> Download</Button>\n                    </div>\n                </FlexItem>\n                <FlexItem className=\"artifact-rules\">\n                    <div className=\"rules-label\">Content Rules</div>\n                    <RuleList rules={this.props.rules}\n                              onEnableRule={this.props.onEnableRule}\n                              onDisableRule={this.props.onDisableRule}\n                              onConfigureRule={this.props.onConfigureRule}\n                    />\n                </FlexItem>\n            </Flex>\n        );\n    }\n\n    protected initializeState(): InfoTabContentState {\n        return {};\n    }\n\n    private nameOrId(): string {\n        return this.props.artifact.name ? this.props.artifact.name : this.props.artifact.id;\n    }\n\n    private labels(): string[] {\n        return this.props.artifact.labels ? this.props.artifact.labels : [];\n    }\n\n    private description(): string {\n        return this.props.artifact.description ?\n            this.props.artifact.description :\n            `An artifact of type ${this.props.artifact.type} with no description.`;\n    }\n\n    private isArtifactInGroup = (): boolean => {\n        const groupId: string|null = this.props.artifact.groupId;\n        return groupId != null && groupId != \"default\";\n    };\n}\n","/**\n * @license\n * Copyright 2020 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport \"./uploadForm.css\";\nimport {PureComponent, PureComponentProps, PureComponentState} from \"../../../../components\";\nimport {FileUpload, Form, FormGroup} from \"@patternfly/react-core\";\n\n\n/**\n * Properties\n */\nexport interface UploadVersionFormProps extends PureComponentProps {\n    onValid: (valid: boolean) => void;\n    onChange: (data: string) => void;\n}\n\n/**\n * State\n */\nexport interface UploadVersionFormState extends PureComponentState {\n    content: string;\n    contentFilename: string;\n    contentIsLoading: boolean;\n    valid: boolean;\n}\n\n/**\n * Models the toolbar for the Artifacts page.\n */\nexport class UploadVersionForm extends PureComponent<UploadVersionFormProps, UploadVersionFormState> {\n\n    constructor(props: Readonly<UploadVersionFormProps>) {\n        super(props);\n    }\n\n    public render(): React.ReactElement {\n        return (\n            <Form>\n                <FormGroup\n                    label=\"Artifact\"\n                    isRequired={true}\n                    fieldId=\"form-artifact\"\n                >\n                    <FileUpload\n                        id=\"artifact-content\"\n                        data-testid=\"form-upload\"\n                        type=\"text\"\n                        filename={this.state.contentFilename}\n                        value={this.state.content}\n                        isRequired={true}\n                        allowEditingUploadedText={true}\n                        onChange={this.onContentChange}\n                        onReadStarted={this.onFileReadStarted}\n                        onReadFinished={this.onFileReadFinished}\n                        isLoading={this.state.contentIsLoading}\n                    />\n                </FormGroup>\n            </Form>\n        );\n    }\n\n    protected initializeState(): UploadVersionFormState {\n        return {\n            content: \"\",\n            contentFilename: \"\",\n            contentIsLoading: false,\n            valid: false\n        };\n    }\n\n    private onContentChange = (value: any, filename: string, event: any): void => {\n        this.setSingleState(\"content\", value, () => {\n            this.fireOnChange();\n            this.checkValid();\n        });\n    };\n\n    private onFileReadStarted = (): void => {\n        this.setSingleState(\"contentIsLoading\", true);\n    };\n\n    private onFileReadFinished = (): void => {\n        this.setSingleState(\"contentIsLoading\", false);\n    };\n\n    private checkValid(): void {\n        const data: string = this.currentData();\n        const oldValid: boolean = this.state.valid;\n        const newValid: boolean = this.isValid(data);\n        const validityChanged: boolean = oldValid !== newValid;\n        this.setState({\n            valid: newValid\n        }, () => {\n            if (validityChanged) {\n                this.fireOnValid();\n            }\n        });\n    }\n\n    private isValid(data: string): boolean {\n        return !!data;\n    }\n\n    private currentData(): string {\n        return this.state.content;\n    }\n\n    private fireOnChange(): void {\n        if (this.props.onChange) {\n            this.props.onChange(this.currentData());\n        }\n    }\n\n    private fireOnValid(): void {\n        if (this.props.onValid) {\n            this.props.onValid(this.state.valid);\n        }\n    }\n\n}\n"],"sourceRoot":""}